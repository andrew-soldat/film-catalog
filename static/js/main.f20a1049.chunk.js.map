{"version":3,"sources":["API/api.js","AppReducer.js","GlobalState.js","hooks/useFetching.js","components/UI/Inputs/Input.jsx","utils/getMovieById.js","components/AddRemoveFromWatchList.jsx","components/AddRemoveFromWatched.jsx","components/CardMovie.jsx","utils/setVoteClass.js","components/ListMovies.jsx","components/SearchHeader.jsx","components/Header.jsx","pages/Main.jsx","components/UI/Loader/Loader.jsx","components/UI/Buttons/ButtonShowMore.jsx","pages/SearchPage.jsx","components/UI/Links/LinkHeader.jsx","components/LinkViewAllMovies.jsx","components/UI/Sliders/SliderMovies.jsx","components/LinkViewAllMoviesByGenre.jsx","components/UI/Sliders/SliderGenres.jsx","pages/Movies.jsx","pages/CollectionsMovies.jsx","pages/GenresMovies.jsx","utils/getGenre.js","utils/getDate.js","components/UI/Buttons/ButtonPlay.jsx","components/UI/Modals/ModalTrailer.jsx","components/UI/Modals/ModalImage.jsx","components/CardCastAndCrew.jsx","components/UI/Sliders/SliderCastAndCrew.jsx","components/CardTrailer.jsx","components/UI/Sliders/SliderTrailer.jsx","components/CardImage.jsx","components/UI/Sliders/SliderImages.jsx","components/UI/Sliders/SliderPosters.jsx","components/RecommendedMovies.jsx","pages/MovieDescriptionPage.jsx","pages/Watched.jsx","router/router.js","pages/WatchList.jsx","components/AppRouter.jsx","components/Footer.jsx","App.js","index.js"],"names":["instance","axios","create","baseURL","apiKey","MoviesService","language","collection","page","get","response","data","id","query","AppReducer","state","action","type","watchList","payload","filter","watch","watched","initialState","localStorage","getItem","JSON","parse","collections","listGenres","name","StateContext","React","createContext","useGlobalState","useContext","GlobalProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","addMovieToWatchList","movie","removeMovieFromWatchList","addMovieToWatched","removeMovieFromWatched","toggleLanguage","useFetching","callback","useState","isLoading","setIsLoading","error","setError","fetching","a","message","Input","props","getMovieById","array","find","AddRemoveFromWatchList","isCard","watchListDisabled","OverlayTrigger","placement","overlay","Tooltip","className","onClick","AddRemoveFromWatched","watchedDisabled","CardMovie","vote","isHeader","handleToggle","IMG_API","router","useHistory","genre","setGenre","genres","i","genre_ids","fetchListGenres","push","src","poster_path","alt","title","release_date","substring","Col","sm","md","lg","vote_average","toFixed","ListMovies","movies","length","map","Row","SearchHeader","isActiveInput","setIsActiveInput","isActiveListMovie","setIsActiveListMovie","setMovies","searchQuery","setSearchQuery","results","fetchMovies","resetInputField","onChange","e","target","placeholder","required","to","pathname","Header","Main","Loader","Spinner","animation","variant","ButtonShowMore","SearchPage","useLocation","currentPage","setCurrentPage","totalPages","setTotalPages","isActive","setIsActive","total_pages","isMoviesLoading","prevState","LinkHeader","LinkViewAllMovies","SwiperCore","use","Keyboard","Scrollbar","Navigation","Pagination","SliderMovies","listMovies","slidesPerView","spaceBetween","slidesPerGroup","keyboard","enabled","scrollbar","navigation","breakpoints","LinkViewAllMoviesByGenres","toLowerCase","replace","SliderGenres","LinkViewAllMoviesByGenre","Movies","setListGenre","moviesNowPlaying","setMoviesNowPlaying","moviesPopular","setMoviesPopular","moviesTopRated","setMoviesTopRated","fetchListGenresPlaying","isListGenresLoading","listGenresError","fetchListMoviesNowPlaying","isMoviesNowPlayingLoading","moviesNowPlayingError","fetchListMoviesPopular","isMoviesPopularLoading","moviesPopularError","fetchListMoviesTopRated","isMoviesTopRatedLoading","moviesTopRatedError","CollectionsMovies","params","useParams","currentHeader","item","fetchListMovies","moviesError","GenresMovies","getDate","date","arrMonth","day","slice","year","dataMounth","mounth","ButtonPlay","ModalTrailer","Modal","show","showTrailer","size","centered","closeButton","Body","keyTrailer","frameBorder","allow","allowFullScreen","ModalImage","showImage","dialogClassName","filePath","CardCastAndCrew","profile_path","character","job","SliderCastAndCrew","list","credit_id","CardTrailer","trailer","handleShow","key","SliderTrailer","listTrailers","CardImage","image","handleShowImage","file_path","SliderImages","SliderPosters","RecommendedMovies","listOfRecommendedMovies","setListOfRecommendedMovies","fetchListOfRecommendedMoviesById","isListOfRecommendedMoviesByIdLoading","listOfRecommendedMoviesByIdError","MovieDescriptionPage","setMovie","listCast","setListCast","listCrew","setListCrew","setListVideo","setKeyTrailer","listBackdrops","setListBackdrops","listPosters","setListPosters","setFilePath","setShowTrailer","setShowImage","file","fetchMovieById","isMovieByIdLoading","movieByIdError","cast","crew","backdrops","posters","fetchCastAndCrewMovie","fetchVideosMovie","fetchImagesMovie","runtime","vote_count","toString","original_title","tagline","production_countries","join","arr","budget","overview","Tabs","defaultActiveKey","Tab","eventKey","onHide","Watched","routes","component","path","exact","AppRouter","route","Footer","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f20a1049.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n   baseURL: 'https://api.themoviedb.org/3/',\n});\n\nconst apiKey = '076fc865efeb5c33f6c3d84f0496217d';\n\nexport const MoviesService = {\n\n   async getCollectionMovies(language, collection, page = 1) {\n      const response = await instance.get(\n         `movie/${collection}?api_key=${apiKey}&language=${language}&page=${page}`\n      );\n      return response.data;\n   },\n\n   async getListGenres(language) {\n   \tconst response = await instance.get(`genre/movie/list?api_key=${apiKey}&language=${language}`)\n   \treturn response.data;\n   },\n\n   async getListMoviesByGenre(language, id, page = 1) {\n      const response = await instance.get(\n         `discover/movie?api_key=${apiKey}&language=${language}&with_genres=${id}&include_adult=false&include_video=false&page=${page}`\n      );\n      return response.data;\n   },\n\n   async searchMovies(language, query, page = 1) {\n      const response = await instance.get(\n         `search/movie?api_key=${apiKey}&language=${language}&page=${page}&include_adult=false&query=${query}`\n      );\n      return response.data;\n   },\n\n   async getMovieById(language, id) {\n      const response = await instance.get(\n         `movie/${id}?api_key=${apiKey}&language=${language}`\n      );\n      return response.data;\n   },\n\n   async getVideosMovieById(language, id) {\n      const response = await instance.get(`movie/${id}/videos?api_key=${apiKey}&language=${language}`)\n      return response.data;\n   },\n\n   async getCastAndCrewMovieById(language, id) {\n   \tconst response = await instance.get(`movie/${id}/credits?api_key=${apiKey}&language=${language}`)\n   \treturn response.data;\n   },\n\n   async getImagesMovieById(id) {\n   \tconst response = await instance.get(`movie/${id}/images?api_key=${apiKey}`)\n   \treturn response.data;\n   },\n\n   async getListOfRecommendedMoviesById(language, id) {\n   \tconst response = await instance.get(`movie/${id}/recommendations?api_key=${apiKey}&language=${language}`)\n   \treturn response.data;\n   }\n};\n","const AppReducer = (state, action) => {\r\n   switch (action.type) {\r\n      case 'ADD_MOVIE_TO_WATCH_LIST':\r\n         return {\r\n            ...state,\r\n            watchList: [...state.watchList, action.payload],\r\n         };\r\n      case 'REMOVE_MOVIE_FROM_WATCH_LIST':\r\n         return {\r\n            ...state,\r\n            watchList: state.watchList.filter(\r\n               (watch) => watch.id !== action.payload.id\r\n            ),\r\n         };\r\n      case 'ADD_MOVIE_TO_WATCHED':\r\n         return {\r\n            ...state,\r\n            watchList: state.watchList.filter(\r\n               (watch) => watch.id !== action.payload.id\r\n            ),\r\n            watched: [...state.watched, action.payload],\r\n         };\r\n      case 'REMOVE_MOVIE_FROM_WATCHED':\r\n         return {\r\n            ...state,\r\n            watchList: [...state.watchList, action.payload],\r\n            watched: state.watched.filter(\r\n               (watch) => watch.id !== action.payload.id\r\n            ),\r\n         };\r\n      case 'TOGGLE_LANGUAGE':\r\n         return {\r\n            ...state,\r\n            language: action.payload,\r\n         };\r\n      default:\r\n         return state;\r\n   }\r\n};\r\nexport default AppReducer;\r\n","import React, { useReducer, useContext, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\nconst initialState = {\n   language: localStorage.getItem(\"language\")\n      ? JSON.parse(localStorage.getItem(\"language\"))\n      : \"en-US\",\n   collections: [\"popular\", \"now_playing\", \"top_rated\"],\n   listGenres: [\n      {\n         id: 28,\n         name: 'Action',\n      },\n      {\n         id: 12,\n         name: 'Adventure',\n      },\n      {\n         id: 16,\n         name: 'Animation',\n      },\n      {\n         id: 35,\n         name: 'Comedy',\n      },\n      {\n         id: 80,\n         name: 'Crime',\n      },\n      {\n         id: 99,\n         name: 'Documentary',\n      },\n      {\n         id: 18,\n         name: 'Drama',\n      },\n      {\n         id: 10751,\n         name: 'Family',\n      },\n      {\n         id: 14,\n         name: 'Fantasy',\n      },\n      {\n         id: 36,\n         name: 'History',\n      },\n      {\n         id: 27,\n         name: 'Horror',\n      },\n      {\n         id: 10402,\n         name: 'Music',\n      },\n      {\n         id: 9648,\n         name: 'Mystery',\n      },\n      {\n         id: 10749,\n         name: 'Romance',\n      },\n      {\n         id: 878,\n         name: 'Science Fiction',\n      },\n      {\n         id: 10770,\n         name: 'TV Movie',\n      },\n      {\n         id: 53,\n         name: 'Thriller',\n      },\n      {\n         id: 10752,\n         name: 'War',\n      },\n      {\n         id: 37,\n         name: 'Western',\n      },\n   ],\n   watchList: localStorage.getItem(\"watchList\")\n      ? JSON.parse(localStorage.getItem(\"watchList\"))\n      : [],\n   watched: localStorage.getItem(\"watched\")\n      ? JSON.parse(localStorage.getItem(\"watched\"))\n      : [],\n};\n\nconst StateContext = React.createContext();\n\nexport const useGlobalState = () => {\n   return useContext(StateContext);\n};\n\nexport const GlobalProvider = ({ children }) => {\n   let [state, dispatch] = useReducer(AppReducer, initialState);\n\n   const addMovieToWatchList = (movie) => {\n      dispatch({ type: \"ADD_MOVIE_TO_WATCH_LIST\", payload: movie });\n   };\n   const removeMovieFromWatchList = (movie) => {\n      dispatch({ type: \"REMOVE_MOVIE_FROM_WATCH_LIST\", payload: movie });\n   };\n   const addMovieToWatched = (movie) => {\n      dispatch({ type: \"ADD_MOVIE_TO_WATCHED\", payload: movie });\n   };\n   const removeMovieFromWatched = (movie) => {\n      dispatch({ type: \"REMOVE_MOVIE_FROM_WATCHED\", payload: movie });\n   };\n\n   const toggleLanguage = (language) => {\n      dispatch({ type: \"TOGGLE_LANGUAGE\", payload: language });\n   };\n\n   useEffect(() => {\n      localStorage.setItem(\"watchList\", JSON.stringify(state.watchList));\n      localStorage.setItem(\"watch\", JSON.stringify(state.watched));\n      localStorage.setItem(\"language\", JSON.stringify(state.language));\n   }, [state]);\n\n   return (\n      <StateContext.Provider\n         value={{\n            language: state.language,\n            collections: state.collections,\n            listGenres: state.listGenres,\n            watchList: state.watchList,\n            watched: state.watched,\n            addMovieToWatchList,\n            removeMovieFromWatchList,\n            addMovieToWatched,\n            removeMovieFromWatched,\n            toggleLanguage,\n         }}\n      >\n         {children}\n      </StateContext.Provider>\n   );\n};\n","import { useState } from 'react';\r\n\r\nexport const useFetching = (callback) => {\r\n   const [isLoading, setIsLoading] = useState(false);\r\n   const [error, setError] = useState('');\r\n\r\n   const fetching = async () => {\r\n      try {\r\n         setIsLoading(true);\r\n         await callback();\r\n      } catch (e) {\r\n         setError(e.message);\r\n      } finally {\r\n         setIsLoading(false);\r\n      }\r\n   };\r\n\r\n   return [fetching, isLoading, error];\r\n};\r\n","import React from 'react'\r\n\r\nconst Input = (props) => {\r\n\treturn (\r\n      <input {...props} />\r\n   );\r\n}\r\n\r\nexport default Input;\r\n","export default function getMovieById(array, id) {\r\n   return array.find((movie) => movie.id === id);\r\n}\r\n","import React from \"react\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport { Bookmark, BookmarkFill } from \"react-bootstrap-icons\";\r\nimport { useGlobalState } from \"../GlobalState\";\r\nimport getMovieById from \"../utils/getMovieById\";\r\n\r\nfunction AddRemoveFromWatchList({ isCard, id, movie }) {\r\n   const { watchList, addMovieToWatchList, removeMovieFromWatchList } =\r\n      useGlobalState();\r\n\r\n   const storedMovie = getMovieById(watchList, id);\r\n   const watchListDisabled = storedMovie ? true : false;\r\n\r\n   return (\r\n      <>\r\n         {isCard && [\r\n            watchListDisabled ? (\r\n               <OverlayTrigger\r\n                  placement=\"top\"\r\n                  overlay={\r\n                     <Tooltip id=\"tooltip-top\">Remove from watchList</Tooltip>\r\n                  }\r\n               >\r\n                  <div\r\n                     className=\"mb-2\"\r\n                     onClick={() => removeMovieFromWatchList(movie)}\r\n                  >\r\n                     <BookmarkFill />\r\n                  </div>\r\n               </OverlayTrigger>\r\n            ) : (\r\n               <OverlayTrigger\r\n                  placement=\"top\"\r\n                  overlay={<Tooltip id=\"tooltip-top\">Add to WatchList</Tooltip>}\r\n               >\r\n                  <div\r\n                     className=\"mb-2\"\r\n                     onClick={() => addMovieToWatchList(movie)}\r\n                  >\r\n                     <Bookmark />\r\n                  </div>\r\n               </OverlayTrigger>\r\n            ),\r\n         ]}\r\n         {!isCard && [\r\n            watchListDisabled ? (\r\n               <div\r\n                  className=\"movie-menu__btn\"\r\n                  onClick={() => removeMovieFromWatchList(movie)}\r\n               >\r\n                  <BookmarkFill />\r\n                  <div className=\"ms-2\">Remove from watchList</div>\r\n               </div>\r\n            ) : (\r\n               <div\r\n                  className=\"movie-menu__btn\"\r\n                  onClick={() => addMovieToWatchList(movie)}\r\n               >\r\n                  {\" \"}\r\n                  <Bookmark />\r\n                  <div className=\"ms-2\">Add to WatchList</div>\r\n               </div>\r\n            ),\r\n         ]}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default AddRemoveFromWatchList;\r\n","import React from \"react\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport { Eye, EyeSlash } from \"react-bootstrap-icons\";\r\nimport { useGlobalState } from \"../GlobalState\";\r\nimport getMovieById from \"../utils/getMovieById\";\r\n\r\nfunction AddRemoveFromWatched({ isCard, id, movie }) {\r\n   const { watched, addMovieToWatched, removeMovieFromWatched } =\r\n      useGlobalState();\r\n\r\n   const storedMovieWatched = getMovieById(watched, id);\r\n   const watchedDisabled = storedMovieWatched ? true : false;\r\n\r\n   return (\r\n      <>\r\n         {isCard && [\r\n            watchedDisabled ? (\r\n               <OverlayTrigger\r\n                  placement=\"top\"\r\n                  overlay={\r\n                     <Tooltip id=\"tooltip-top\">Remove from watched</Tooltip>\r\n                  }\r\n               >\r\n                  <div onClick={() => removeMovieFromWatched(movie)}>\r\n                     <EyeSlash />\r\n                  </div>\r\n               </OverlayTrigger>\r\n            ) : (\r\n               <OverlayTrigger\r\n                  placement=\"top\"\r\n                  overlay={<Tooltip id=\"tooltip-top\">Watched</Tooltip>}\r\n               >\r\n                  <div onClick={() => addMovieToWatched(movie)}>\r\n                     <Eye />\r\n                  </div>\r\n               </OverlayTrigger>\r\n            ),\r\n         ]}\r\n         {!isCard && [\r\n            watchedDisabled ? (\r\n               <div\r\n                  className=\"movie-menu__btn\"\r\n                  onClick={() => removeMovieFromWatched(movie)}\r\n               >\r\n                  <EyeSlash />\r\n                  <div className=\"ms-2\">Remove from watched</div>\r\n               </div>\r\n            ) : (\r\n               <div\r\n                  className=\"movie-menu__btn\"\r\n                  onClick={() => addMovieToWatched(movie)}\r\n               >\r\n                  <Eye />\r\n                  <div className=\"ms-2\">Watched</div>\r\n               </div>\r\n            ),\r\n         ]}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default AddRemoveFromWatched;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport { PlayFill } from \"react-bootstrap-icons\";\r\nimport { useGlobalState } from \"../GlobalState\";\r\nimport setVoteClass from \"../utils/setVoteClass\";\r\nimport AddRemoveFromWatchList from \"./AddRemoveFromWatchList\";\r\nimport AddRemoveFromWatched from \"./AddRemoveFromWatched\";\r\nimport { MoviesService } from \"./../API/api\";\r\n\r\nfunction CardMovie({ movie, isHeader, handleToggle }) {\r\n   const IMG_API = \"https://image.tmdb.org/t/p/w500\";\r\n   let router = useHistory();\r\n   const { language } = useGlobalState();\r\n   const [genre, setGenre] = useState({});\r\n\r\n   async function fetchListGenres() {\r\n      const response = await MoviesService.getListGenres(language);\r\n      setGenre(response.genres.find((i) => i.id === movie.genre_ids[0]));\r\n   }\r\n\r\n   useEffect(() => {\r\n      fetchListGenres();\r\n   }, []);\r\n\r\n   return (\r\n      <>\r\n         {isHeader ? (\r\n            <div\r\n               className=\"search-menu__item\"\r\n               onClick={() => {\r\n                  router.push(`/watch/${movie.id}`);\r\n                  handleToggle();\r\n               }}\r\n            >\r\n               <div className=\"search-menu__img\">\r\n                  <img\r\n                     className=\"img-fluid\"\r\n                     src={\r\n                        movie.poster_path\r\n                           ? IMG_API + movie.poster_path\r\n                           : \"assets/img/camera.jpg\"\r\n                     }\r\n                     alt={movie?.title}\r\n                  />\r\n               </div>\r\n               <div className=\"search-menu__description p-2\">\r\n                  <div className=\"search-menu__title mb-1\">{movie?.title}</div>\r\n                  <div className=\"search-menu__text\">\r\n                     {movie.release_date &&\r\n                        `${movie.release_date.substring(0, 4)},`}{\" \"}\r\n                     {genre?.name}\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         ) : (\r\n            <Col sm={6} md={3} lg={2} className=\"item-movie\">\r\n               <div className=\"item-movie__wrapper\">\r\n                  <div className=\"item-movie__menu\">\r\n                     <AddRemoveFromWatchList\r\n                        isCard={true}\r\n                        id={movie.id}\r\n                        movie={movie}\r\n                     />\r\n                     <AddRemoveFromWatched\r\n                        isCard={true}\r\n                        id={movie.id}\r\n                        movie={movie}\r\n                     />\r\n                  </div>\r\n                  <div\r\n                     className={`item-movie__vote-average ${setVoteClass(\r\n                        movie.vote_average\r\n                     )}`}\r\n                  >\r\n                     {movie.vote_average.toFixed(1)}\r\n                  </div>\r\n                  <div\r\n                     className=\"item-movie__img\"\r\n                     onClick={() => router.push(`/watch/${movie.id}`)}\r\n                  >\r\n                     <img\r\n                        className=\"img-fluid\"\r\n                        src={\r\n                           movie.poster_path\r\n                              ? IMG_API + movie.poster_path\r\n                              : \"assets/img/camera.jpg\"\r\n                        }\r\n                        alt={movie?.title}\r\n                     />\r\n                     <div className=\"item-movie__overlay\">\r\n                        <div>\r\n                           <PlayFill />\r\n                        </div>\r\n                        <div>Watch</div>\r\n                     </div>\r\n                  </div>\r\n                  <div className=\"item-movie__description p-2\">\r\n                     <div\r\n                        className=\"item-movie__title h6 mb-1\"\r\n                        onClick={() => router.push(`/watch/${movie.id}`)}\r\n                     >\r\n                        {movie?.title}\r\n                     </div>\r\n                     <div className=\"item-movie__date\">\r\n                        {movie.release_date &&\r\n                           `${movie.release_date.substring(0, 4)},`}{\" \"}\r\n                        {genre?.name}\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </Col>\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default CardMovie;\r\n","export default function setVoteClass(vote) {\r\n   if (vote >= 8) {\r\n      return 'green';\r\n   } else if (vote >= 5) {\r\n      return 'yellow';\r\n   } else {\r\n      return 'red';\r\n   }\r\n}\r\n","import React from \"react\";\r\nimport CardMovie from \"./CardMovie\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nfunction ListMovies({ movies, isHeader, handleToggle }) {\r\n   return (\r\n      <>\r\n         {isHeader ? (\r\n            [\r\n               movies.length > 0 ? (\r\n                  movies.map((movie) => (\r\n                     <CardMovie\r\n                        key={movie.id}\r\n                        movie={movie}\r\n                        handleToggle={handleToggle}\r\n                        isHeader\r\n                     />\r\n                  ))\r\n               ) : (\r\n                  <div className=\"search-menu__no-results\">Nothing found</div>\r\n               ),\r\n            ]\r\n         ) : (\r\n            <Row className=\"g-4\">\r\n               {movies.map((movie) => (\r\n                  <CardMovie key={movie.id} movie={movie} />\r\n               ))}\r\n            </Row>\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default ListMovies;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MoviesService } from \"../API/api\";\r\nimport { useGlobalState } from \"../GlobalState\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\nimport Input from \"./UI/Inputs/Input\";\r\nimport { Search, XLg } from \"react-bootstrap-icons\";\r\nimport ListMovies from \"./ListMovies\";\r\n\r\nconst SearchHeader = () => {\r\n   const { language } = useGlobalState();\r\n   const [isActiveInput, setIsActiveInput] = useState(false);\r\n   const [isActiveListMovie, setIsActiveListMovie] = useState(false);\r\n   const [movies, setMovies] = useState([]);\r\n   const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n   const [fetchMovies, isMoviesLoading, movieError] = useFetching(async () => {\r\n      const response = await MoviesService.searchMovies(language, searchQuery);\r\n      setMovies(response.results);\r\n   });\r\n\r\n   const onChange = (e) => {\r\n      setSearchQuery(e.target.value);\r\n\r\n      if (e.target.value.length > 1) {\r\n         setIsActiveListMovie(true);\r\n         fetchMovies(searchQuery);\r\n      } else {\r\n         setMovies([]);\r\n         setIsActiveListMovie(false);\r\n      }\r\n   };\r\n\r\n   const handleToggle = () => {\r\n      setIsActiveInput(!isActiveInput);\r\n      resetInputField();\r\n   };\r\n\r\n   const resetInputField = () => {\r\n      setSearchQuery(\"\");\r\n      setMovies([]);\r\n      setIsActiveListMovie(false);\r\n   };\r\n\r\n   useEffect(() => {\r\n      fetchMovies();\r\n   }, [language]);\r\n\r\n   return (\r\n      <>\r\n         <div className=\"header-search\">\r\n            <form\r\n               className={\r\n                  isActiveInput\r\n                     ? \"header-search__form _active\"\r\n                     : \"header-search__form\"\r\n               }\r\n            >\r\n               <Input\r\n                  onChange={onChange}\r\n                  value={searchQuery}\r\n                  placeholder=\"Search...\"\r\n                  type=\"text\"\r\n                  required\r\n               />\r\n               <div className=\"header-search__button\" onClick={handleToggle}>\r\n                  <Search />\r\n               </div>\r\n               {isActiveListMovie && (\r\n                  <div\r\n                     className=\"header-search__reset\"\r\n                     onClick={resetInputField}\r\n                  >\r\n                     <XLg />\r\n                  </div>\r\n               )}\r\n            </form>\r\n            {isActiveListMovie && (\r\n               <div className=\"search-menu\">\r\n                  <div className=\"search-menu__list\">\r\n                     <ListMovies\r\n                        movies={movies}\r\n                        isHeader={true}\r\n                        handleToggle={handleToggle}\r\n                     />\r\n                  </div>\r\n                  {movies.length > 0 && (\r\n                     <Link\r\n                        className=\"search-menu__all-results\"\r\n                        to={{\r\n                           pathname: \"/search\",\r\n                           state: searchQuery,\r\n                        }}\r\n                        onClick={handleToggle}\r\n                     >\r\n                        All results\r\n                     </Link>\r\n                  )}\r\n               </div>\r\n            )}\r\n         </div>\r\n         <div\r\n            className={isActiveInput ? \"overlay _active\" : \"overlay\"}\r\n            onClick={handleToggle}\r\n         ></div>\r\n      </>\r\n   );\r\n};\r\nexport default SearchHeader;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport SearchHeader from \"./SearchHeader\";\r\n\r\nconst Header = () => {\r\n   return (\r\n      <header className=\"header\">\r\n         <div className=\"container\">\r\n            <div className=\"header__body\">\r\n               <Link to=\"/\" className=\"header__logo\">\r\n                  <img src=\"./assets/img/logo.svg\" alt=\"Logo\" />\r\n               </Link>\r\n               <div className=\"header__nav\">\r\n                  <SearchHeader />\r\n                  <nav className=\"d-flex align-items-center\">\r\n                     <ul className=\"header__list\">\r\n                        <li>\r\n                           <NavLink to=\"/movies\" className=\"header__link\">\r\n                              Movies\r\n                           </NavLink>\r\n                        </li>\r\n                        <li>\r\n                           <NavLink to=\"/watchlist\" className=\"header__link\">\r\n                              Watch List\r\n                           </NavLink>\r\n                        </li>\r\n                        <li>\r\n                           <NavLink to=\"/watched\" className=\"header__link\">\r\n                              Watched\r\n                           </NavLink>\r\n                        </li>\r\n                     </ul>\r\n                  </nav>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </header>\r\n   );\r\n};\r\nexport default Header;\r\n","import React from 'react';\n\nfunction Main() {\n   return (\n      <div className=\"container\">\n         <h1 className=\"title\">Main Page</h1>\n      </div>\n   );\n}\n\nexport default Main;\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loader() {\r\n   return (\r\n      <Spinner className=\"mx-auto d-block\" animation=\"border\" variant=\"light\" />\r\n   );\r\n}\r\n\r\nexport default Loader;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction ButtonShowMore({ children, ...props }) {\r\n   return (\r\n      <button {...props} className=\"show-more\">\r\n         Show more\r\n      </button>\r\n   );\r\n}\r\n\r\nexport default ButtonShowMore;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MoviesService } from \"../API/api\";\r\nimport ListMovies from \"../components/ListMovies\";\r\nimport Input from \"../components/UI/Inputs/Input\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\nimport { useGlobalState } from \"../GlobalState\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { Search, XLg } from \"react-bootstrap-icons\";\r\nimport ButtonShowMore from \"../components/UI/Buttons/ButtonShowMore\";\r\n\r\nfunction SearchPage() {\r\n   let { state } = useLocation();\r\n   const [searchQuery, setSearchQuery] = useState(state || \"\");\r\n   const [movies, setMovies] = useState([]);\r\n   const [currentPage, setCurrentPage] = useState(1);\r\n   const [totalPages, setTotalPages] = useState(0);\r\n   const [isActive, setIsActive] = useState(state ? true : false);\r\n   const { language } = useGlobalState();\r\n\r\n   const [fetchMovies, isMoviesLoading, movieError] = useFetching(async () => {\r\n      const response = await MoviesService.searchMovies(\r\n         language,\r\n         searchQuery,\r\n         currentPage\r\n      );\r\n      setMovies([...movies, ...response.results]);\r\n      setTotalPages(response.total_pages);\r\n   });\r\n\r\n   const onChange = (e) => {\r\n      setSearchQuery(e.target.value);\r\n\r\n      if (e.target.value.length > 1) {\r\n         setIsActive(true);\r\n         fetchMovies();\r\n      } else {\r\n         setMovies([]);\r\n         setIsActive(false);\r\n         setCurrentPage(1);\r\n         setTotalPages(0);\r\n      }\r\n   };\r\n\r\n   const resetInputField = () => {\r\n      setSearchQuery(\"\");\r\n      setMovies([]);\r\n      setIsActive(false);\r\n      setCurrentPage(1);\r\n      setTotalPages(0);\r\n   };\r\n\r\n   const showMore = () => {\r\n      if (currentPage < totalPages) {\r\n         setCurrentPage((prevState) => prevState + 1);\r\n      }\r\n   };\r\n\r\n   useEffect(() => {\r\n      fetchMovies();\r\n   }, [currentPage]);\r\n\r\n   return (\r\n      <div className=\"container\">\r\n         <div className=\"mb-5\">\r\n            <form className=\"search-form\">\r\n               <div className=\"search-form__icon\">\r\n                  <Search />\r\n               </div>\r\n               <Input\r\n                  onChange={onChange}\r\n                  value={searchQuery}\r\n                  placeholder=\"Search...\"\r\n                  type=\"text\"\r\n                  required\r\n               />\r\n               {isActive && (\r\n                  <div className=\"search-form__reset\" onClick={resetInputField}>\r\n                     <XLg />\r\n                  </div>\r\n               )}\r\n            </form>\r\n         </div>\r\n         {searchQuery.length > 1 &&\r\n            (isMoviesLoading ? (\r\n               <Loader />\r\n            ) : movies.length > 0 ? (\r\n               <div className=\"mb-5\">\r\n                  <ListMovies movies={movies} />\r\n               </div>\r\n            ) : (\r\n               <div className=\"no-movies\">\r\n                  <h2 className=\"no-movies__title\">Nothing found</h2>\r\n               </div>\r\n            ))}\r\n         {totalPages > 1 && currentPage !== totalPages && (\r\n            <ButtonShowMore\r\n               onClick={showMore}\r\n               currentPage={currentPage}\r\n               totalPages={totalPages}\r\n               type=\"button\"\r\n            >\r\n               Show more\r\n            </ButtonShowMore>\r\n         )}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { ChevronRight } from 'react-bootstrap-icons';\n\nconst LinkHeader = ({ children, ...props }) => {\n   let router = useHistory();\n\n   return (\n      <h2\n         className=\"title link-header mb-3\"\n         onClick={() => router.push(`/collections/${props.collection}`)}\n      >\n         {children}\n         <ChevronRight className=\"ms-2\" />\n      </h2>\n   );\n};\n\nexport default LinkHeader;\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction LinkViewAllMovies({ collection }) {\r\n   let router = useHistory();\r\n\r\n   return (\r\n      <button\r\n         type=\"button\"\r\n         className=\"view-all collection\"\r\n         onClick={() => router.push(`/collections/${collection}`)}\r\n      >\r\n         View all\r\n      </button>\r\n   );\r\n}\r\n\r\nexport default LinkViewAllMovies;\r\n","import React from \"react\";\nimport CardMovie from \"../../CardMovie\";\nimport LinkViewAllMovies from \"../../LinkViewAllMovies\";\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react.js\";\nimport SwiperCore, {\n   Keyboard,\n   Scrollbar,\n   Navigation,\n   Pagination,\n} from \"swiper\";\nSwiperCore.use([Keyboard, Scrollbar, Navigation, Pagination]);\n\nconst SliderMovies = ({ listMovies, collection }) => {\n   return (\n      <div className=\"swipper-container\">\n         <Swiper\n            slidesPerView={1}\n            spaceBetween={24}\n            slidesPerGroup={1}\n            keyboard={{\n               enabled: true,\n            }}\n            scrollbar={true}\n            navigation={true}\n            breakpoints={{\n               991: {\n                  slidesPerView: 6,\n                  slidesPerGroup: 6,\n               },\n               768: {\n                  slidesPerView: 4,\n                  slidesPerGroup: 4,\n               },\n               565: {\n                  slidesPerView: 2,\n                  slidesPerGroup: 2,\n               },\n            }}\n         >\n            {listMovies.map((movie) => (\n               <SwiperSlide key={movie.id}>\n                  <CardMovie movie={movie} />\n               </SwiperSlide>\n            ))}\n            {collection && (\n               <SwiperSlide>\n                  <LinkViewAllMovies collection={collection} />\n               </SwiperSlide>\n            )}\n         </Swiper>\n      </div>\n   );\n};\n\nexport default SliderMovies;\n","import React from 'react';\nimport { useHistory } from 'react-router';\n\nfunction LinkViewAllMoviesByGenres({ name }) {\n   let router = useHistory();\n\n   return (\n      <div\n         className=\"view-all\"\n         onClick={() => router.push(`/movies/${name.toLowerCase().replace(/\\s/g, '_')}`)}\n      >\n\t\t\t<div>\n\t\t\t\t<img className=\"img-fluid\" src={`assets/img/icons/${name}.png`} alt={name} />\n\t\t\t</div>\n\t\t\t<div className=\"link-genre__name mt-3\">{name}</div>\n      </div>\n   );\n}\n\nexport default LinkViewAllMoviesByGenres;\n","import React from \"react\";\nimport LinkViewAllMoviesByGenre from \"../../../components/LinkViewAllMoviesByGenre\";\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react.js\";\nimport SwiperCore, {\n   Keyboard,\n   Scrollbar,\n   Navigation,\n   Pagination,\n} from \"swiper\";\nSwiperCore.use([Keyboard, Scrollbar, Navigation, Pagination]);\n\nconst SliderGenres = ({ listGenres }) => {\n   return (\n      <div className=\"swipper-container\">\n         <Swiper\n            slidesPerView={1}\n            spaceBetween={24}\n            slidesPerGroup={1}\n            keyboard={{\n               enabled: true,\n            }}\n            scrollbar={true}\n            navigation={true}\n            breakpoints={{\n               991: {\n                  slidesPerView: 6,\n                  slidesPerGroup: 6,\n               },\n               768: {\n                  slidesPerView: 4,\n                  slidesPerGroup: 4,\n               },\n               565: {\n                  slidesPerView: 2,\n                  slidesPerGroup: 2,\n               },\n            }}\n         >\n            {listGenres.map((genre) => (\n               <SwiperSlide key={genre.name}>\n                  <LinkViewAllMoviesByGenre name={genre.name} id={genre.id} />\n               </SwiperSlide>\n            ))}\n         </Swiper>\n      </div>\n   );\n};\n\nexport default SliderGenres;\n","import React, { useState, useEffect } from \"react\";\r\nimport { MoviesService } from \"../API/api\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\nimport LinkHeader from \"../components/UI/Links/LinkHeader\";\r\nimport { useGlobalState } from \"../GlobalState\";\r\nimport SliderMovies from \"../components/UI/Sliders/SliderMovies\";\r\nimport SliderGenres from \"../components/UI/Sliders/SliderGenres\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\n\r\nfunction Movies() {\r\n   const [listGenres, setListGenre] = useState([]);\r\n   const [moviesNowPlaying, setMoviesNowPlaying] = useState([]);\r\n   const [moviesPopular, setMoviesPopular] = useState([]);\r\n   const [moviesTopRated, setMoviesTopRated] = useState([]);\r\n   const { language, collections } = useGlobalState();\r\n\r\n   const [fetchListGenresPlaying, isListGenresLoading, listGenresError] =\r\n      useFetching(async () => {\r\n         const response = await MoviesService.getListGenres(language);\r\n         setListGenre(response.genres);\r\n      });\r\n\r\n   const [\r\n      fetchListMoviesNowPlaying,\r\n      isMoviesNowPlayingLoading,\r\n      moviesNowPlayingError,\r\n   ] = useFetching(async () => {\r\n      const response = await MoviesService.getCollectionMovies(\r\n         language,\r\n         collections[0]\r\n      );\r\n      setMoviesNowPlaying(response.results);\r\n   });\r\n\r\n   const [fetchListMoviesPopular, isMoviesPopularLoading, moviesPopularError] =\r\n      useFetching(async () => {\r\n         const response = await MoviesService.getCollectionMovies(\r\n            language,\r\n            collections[1]\r\n         );\r\n         setMoviesPopular(response.results);\r\n      });\r\n\r\n   const [\r\n      fetchListMoviesTopRated,\r\n      isMoviesTopRatedLoading,\r\n      moviesTopRatedError,\r\n   ] = useFetching(async () => {\r\n      const response = await MoviesService.getCollectionMovies(\r\n         language,\r\n         collections[2]\r\n      );\r\n      setMoviesTopRated(response.results);\r\n   });\r\n\r\n   useEffect(() => {\r\n      fetchListGenresPlaying();\r\n      fetchListMoviesNowPlaying();\r\n      fetchListMoviesPopular();\r\n      fetchListMoviesTopRated();\r\n   }, []);\r\n\r\n   return (\r\n      <div className=\"container\">\r\n         <section className=\"mb-5\">\r\n            {isListGenresLoading && <h2 className=\"h2\">{listGenresError}</h2>}\r\n            {isListGenresLoading ? (\r\n               <Loader />\r\n            ) : (\r\n               [\r\n                  moviesNowPlaying.length > 0 && (\r\n                     <SliderGenres listGenres={listGenres} />\r\n                  ),\r\n               ]\r\n            )}\r\n         </section>\r\n         <section className=\"mb-5\">\r\n            <LinkHeader collection={collections[0]}>Populars now</LinkHeader>\r\n            {isMoviesPopularLoading && (\r\n               <h2 className=\"h2\">{moviesPopularError}</h2>\r\n            )}\r\n            {isMoviesPopularLoading ? (\r\n               <Loader />\r\n            ) : (\r\n               [\r\n                  moviesPopular.length > 0 && (\r\n                     <SliderMovies\r\n                        listMovies={moviesPopular}\r\n                        collection={collections[0]}\r\n                     />\r\n                  ),\r\n               ]\r\n            )}\r\n         </section>\r\n         <section className=\"mb-5\">\r\n            <LinkHeader collection={collections[1]}>\r\n               Playing now in theatres\r\n            </LinkHeader>\r\n            {isMoviesNowPlayingLoading && (\r\n               <h2 className=\"h2\">{moviesNowPlayingError}</h2>\r\n            )}\r\n            {isMoviesNowPlayingLoading ? (\r\n               <Loader />\r\n            ) : (\r\n               [\r\n                  moviesNowPlaying.length > 0 && (\r\n                     <SliderMovies\r\n                        listMovies={moviesNowPlaying}\r\n                        collection={collections[1]}\r\n                     />\r\n                  ),\r\n               ]\r\n            )}\r\n         </section>\r\n         <section className=\"mb-5\">\r\n            <LinkHeader collection={collections[2]}>Top Rated</LinkHeader>\r\n            {isMoviesTopRatedLoading && (\r\n               <h2 className=\"h2\">{moviesTopRatedError}</h2>\r\n            )}\r\n            {isMoviesTopRatedLoading ? (\r\n               <Loader />\r\n            ) : (\r\n               [\r\n                  moviesTopRated.length > 0 && (\r\n                     <SliderMovies\r\n                        listMovies={moviesTopRated}\r\n                        collection={collections[2]}\r\n                     />\r\n                  ),\r\n               ]\r\n            )}\r\n         </section>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Movies;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGlobalState } from \"../GlobalState\";\r\nimport { MoviesService } from \"../API/api\";\r\nimport ListMovies from \"../components/ListMovies\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\nimport ButtonShowMore from \"../components/UI/Buttons/ButtonShowMore\";\r\n\r\nfunction CollectionsMovies() {\r\n   const listHeader = [\r\n      { name: \"Populars now\", collection: \"popular\" },\r\n      { name: \"Playing now in theatres\", collection: \"now_playing\" },\r\n      { name: \"Top Rated\", collection: \"top_rated\" },\r\n   ];\r\n   const [movies, setMovies] = useState([]);\r\n   const [currentPage, setCurrentPage] = useState(1);\r\n   const [totalPages, setTotalPages] = useState(0);\r\n   let params = useParams();\r\n   const currentHeader = listHeader.find(\r\n      (item) => item.collection === params.collection\r\n   );\r\n   const { language } = useGlobalState();\r\n\r\n   const [fetchListMovies, isMoviesLoading, moviesError] = useFetching(\r\n      async () => {\r\n         const response = await MoviesService.getCollectionMovies(\r\n            language,\r\n            params.collection,\r\n            currentPage\r\n         );\r\n         setMovies([...movies, ...response.results]);\r\n         setTotalPages(response.total_pages);\r\n      }\r\n   );\r\n\r\n   const showMore = () => {\r\n      if (currentPage < totalPages) {\r\n         setCurrentPage((prevState) => prevState + 1);\r\n      }\r\n   };\r\n\r\n   useEffect(() => {\r\n      fetchListMovies();\r\n   }, [currentPage]);\r\n\r\n   return (\r\n      <section>\r\n         <div className=\"container\">\r\n            <h1 className=\"title mb-3\">{currentHeader.name}</h1>\r\n            {moviesError && <h2 className=\"h2\">{moviesError}</h2>}\r\n            {isMoviesLoading && <Loader />}\r\n            <ListMovies movies={movies} />\r\n            {currentPage !== totalPages && (\r\n               <ButtonShowMore\r\n                  onClick={showMore}\r\n                  currentPage={currentPage}\r\n                  totalPages={totalPages}\r\n                  type=\"button\"\r\n               >\r\n                  Show more\r\n               </ButtonShowMore>\r\n            )}\r\n         </div>\r\n      </section>\r\n   );\r\n}\r\n\r\nexport default CollectionsMovies;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { MoviesService } from \"../API/api\";\r\nimport ListMovies from \"../components/ListMovies\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\nimport { useGlobalState } from \"../GlobalState\";\r\nimport { getGenre } from \"../utils/getGenre\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\nimport ButtonShowMore from \"../components/UI/Buttons/ButtonShowMore\";\r\n\r\nfunction GenresMovies() {\r\n   const [movies, setMovies] = useState([]);\r\n   const [currentPage, setCurrentPage] = useState(1);\r\n   const [totalPages, setTotalPages] = useState(0);\r\n   let params = useParams();\r\n   const { language, listGenres } = useGlobalState();\r\n   const genre = getGenre(listGenres, params.name);\r\n\r\n   const [fetchListMovies, isMoviesLoading, moviesError] = useFetching(\r\n      async () => {\r\n         const response = await MoviesService.getListMoviesByGenre(\r\n            language,\r\n            genre.id,\r\n            currentPage\r\n         );\r\n         setMovies([...movies, ...response.results]);\r\n         setTotalPages(response.total_pages);\r\n      }\r\n   );\r\n\r\n   const showMore = () => {\r\n      if (currentPage < totalPages) {\r\n         setCurrentPage((prevState) => prevState + 1);\r\n      }\r\n   };\r\n\r\n   useEffect(() => {\r\n      fetchListMovies();\r\n   }, [currentPage]);\r\n\r\n   return (\r\n      <section>\r\n         <div className=\"container\">\r\n            <h1 className=\"title mb-3\">{genre && genre.name}</h1>\r\n            {moviesError && <h2 className=\"h2\">{moviesError}</h2>}\r\n            {isMoviesLoading && <Loader />}\r\n            <ListMovies movies={movies} />\r\n            {currentPage !== totalPages && (\r\n               <ButtonShowMore\r\n                  onClick={showMore}\r\n                  currentPage={currentPage}\r\n                  totalPages={totalPages}\r\n                  type=\"button\"\r\n               >\r\n                  Show more\r\n               </ButtonShowMore>\r\n            )}\r\n         </div>\r\n      </section>\r\n   );\r\n}\r\n\r\nexport default GenresMovies;\r\n","export const getGenre = (array, name) => {\n   return array.find(i => i.name.toLowerCase() === name.replace(/_/g, \" \"))\n};\n","export const getDate = (date) => {\r\n   const arrMonth = [\r\n      'January',\r\n      'February',\r\n      'March',\r\n      'April',\r\n      'May',\r\n      'June',\r\n      'July',\r\n      'August',\r\n      'September',\r\n      'October',\r\n      'November',\r\n      'December',\r\n   ];\r\n   let day = date.slice(8, 9) === '0' ? date.slice(9) : date.slice(8);\r\n   const year = date.slice(0, 4);\r\n   const dataMounth = date.slice(5, 7);\r\n   let mounth = '';\r\n\r\n   if (dataMounth < 10) {\r\n      mounth = arrMonth[dataMounth.slice(1) - 1];\r\n   } else {\r\n      mounth = arrMonth[dataMounth - 1];\r\n   }\r\n\r\n   return `${day} ${mounth} ${year}`;\r\n};\r\n","import React from 'react'\nimport { PlayBtn } from \"react-bootstrap-icons\";\n\nconst ButtonPlay = ({children, ...props}) => {\n\treturn (\n      <button className=\"button-play\" {...props}>\n\t\t\t<PlayBtn className=\"me-2\" />{children}\n\t\t</button>\n   );\n}\n\nexport default ButtonPlay;\n","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nfunction ModalTrailer(props) {\r\n   return (\r\n      <Modal\r\n         {...props}\r\n         show={props.showTrailer}\r\n         size=\"lg\"\r\n         className=\"modal-video-movie\"\r\n         aria-labelledby=\"contained-modal-title-vcenter\"\r\n         centered\r\n      >\r\n         <Modal.Header closeButton>Play Trailer</Modal.Header>\r\n         <Modal.Body>\r\n            <iframe\r\n               src={\r\n                  props.keyTrailer\r\n                     ? `https://www.youtube.com/embed/${props.keyTrailer}`\r\n                     : null\r\n               }\r\n               title=\"YouTube video player\"\r\n               frameBorder=\"0\"\r\n               allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n               allowFullScreen\r\n            ></iframe>\r\n         </Modal.Body>\r\n      </Modal>\r\n   );\r\n}\r\n\r\nexport default ModalTrailer;\r\n","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nfunction ModalImage(props) {\r\n   const IMG_API = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n   return (\r\n      <Modal\r\n         {...props}\r\n         show={props.showImage}\r\n         dialogClassName=\"modal-fullscreen\"\r\n         className=\"modal-image-movie\"\r\n      >\r\n         <Modal.Header closeButton></Modal.Header>\r\n         <Modal.Body>\r\n            <img\r\n               src={props.filePath && IMG_API + props.filePath}\r\n               alt=\"Foto\"\r\n            />\r\n         </Modal.Body>\r\n      </Modal>\r\n   );\r\n}\r\n\r\nexport default ModalImage;\r\n","import React from \"react\";\n\nfunction CardCastAndCrew({ item }) {\n   const IMG_API = \"https://image.tmdb.org/t/p/w300\";\n\n   return (\n      <div className=\"tab-card-movie\">\n         <div className=\"tab-card-movie__img\">\n            <img\n               src={\n                  item.profile_path\n                     ? IMG_API + item.profile_path\n                     : \"../assets/img/avatar-default.jpg\"\n               }\n               alt={item?.name}\n               className=\"img-fluid\"\n            />\n         </div>\n         <div className=\"tab-card-movie__info\">\n            <div className=\"tab-card-movie__name\">{item?.name}</div>\n            <div className=\"tab-card-movie__text\">\n               {item.character ? item?.character : item?.job}\n            </div>\n         </div>\n      </div>\n   );\n}\n\nexport default CardCastAndCrew;\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react.js\";\r\nimport SwiperCore, {\r\n   Keyboard,\r\n   Scrollbar,\r\n   Navigation,\r\n   Pagination,\r\n} from \"swiper\";\r\nimport CardCastAndCrew from \"../../CardCastAndCrew\";\r\nSwiperCore.use([Keyboard, Scrollbar, Navigation, Pagination]);\r\n\r\nconst SliderCastAndCrew = ({ list }) => {\r\n   return (\r\n      <div className=\"swipper-container swiper-tab-card-movie\">\r\n         <Swiper\r\n            slidesPerView={2}\r\n            slidesPerGroup={1}\r\n            keyboard={{\r\n               enabled: true,\r\n            }}\r\n            scrollbar={true}\r\n            navigation={true}\r\n            breakpoints={{\r\n               991: {\r\n                  slidesPerView: 8,\r\n               },\r\n               768: {\r\n                  slidesPerView: 6,\r\n               },\r\n               565: {\r\n                  slidesPerView: 4,\r\n               },\r\n               480: {\r\n                  slidesPerView: 3,\r\n               },\r\n            }}\r\n         >\r\n            {list.map((item) => (\r\n               <SwiperSlide key={item.credit_id}>\r\n                  <CardCastAndCrew item={item} />\r\n               </SwiperSlide>\r\n            ))}\r\n         </Swiper>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SliderCastAndCrew;\r\n","import React from \"react\";\r\n\r\nfunction CardTrailer({ trailer, handleShow }) {\r\n   return (\r\n      <div className=\"tab-card-movie\">\r\n         <div className=\"tab-card-movie__trailer\">\r\n            <iframe\r\n               src={`https://www.youtube.com/embed/${trailer.key}`}\r\n               title=\"YouTube video player\"\r\n               frameBorder=\"0\"\r\n               allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n               allowFullScreen\r\n            ></iframe>\r\n            <button\r\n               className=\"tab-card-movie__btn-open-modal\"\r\n               onClick={() => handleShow(trailer.key)}\r\n            ></button>\r\n         </div>\r\n         <div className=\"tab-card-movie__info tab-card-movie__info_trailer\">\r\n            {trailer.name}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default CardTrailer;\r\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react.js\";\r\nimport SwiperCore, {\r\n   Keyboard,\r\n   Scrollbar,\r\n   Navigation,\r\n   Pagination,\r\n} from \"swiper\";\r\nimport CardTrailer from \"../../CardTrailer\";\r\nSwiperCore.use([Keyboard, Scrollbar, Navigation, Pagination]);\r\n\r\nconst SliderTrailer = ({ listTrailers, handleShow }) => {\r\n   return (\r\n      <div className=\"swipper-container swiper-tab-card-movie\">\r\n         <Swiper\r\n            slidesPerView={1}\r\n            slidesPerGroup={1}\r\n            keyboard={{\r\n               enabled: true,\r\n            }}\r\n            scrollbar={true}\r\n            navigation={true}\r\n            breakpoints={{\r\n               991: {\r\n                  slidesPerView: 4,\r\n               },\r\n               768: {\r\n                  slidesPerView: 3,\r\n               },\r\n               565: {\r\n                  slidesPerView: 2,\r\n               },\r\n            }}\r\n         >\r\n            {listTrailers.map((item) => (\r\n               <SwiperSlide key={item.id}>\r\n                  <CardTrailer trailer={item} handleShow={handleShow} />\r\n               </SwiperSlide>\r\n            ))}\r\n         </Swiper>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SliderTrailer;\r\n","import React from \"react\";\n\nfunction CardImage({ image, handleShowImage }) {\n   const IMG_API = \"https://image.tmdb.org/t/p/original/\";\n   \n   return (\n      <div className=\"tab-card-movie\">\n         <div className=\"tab-card-movie__img\">\n            <img\n               src={image.file_path && IMG_API + image.file_path}\n               alt=\"\"\n               className=\"img-fluid\"\n            />\n            <button\n               className=\"tab-card-movie__btn-open-modal\"\n               onClick={() => handleShowImage(image.file_path)}\n            ></button>\n         </div>\n      </div>\n   );\n}\n\nexport default CardImage;\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react.js\";\r\nimport SwiperCore, {\r\n   Keyboard,\r\n   Scrollbar,\r\n   Navigation,\r\n   Pagination,\r\n} from \"swiper\";\r\nimport CardImage from \"../../CardImage\";\r\nSwiperCore.use([Keyboard, Scrollbar, Navigation, Pagination]);\r\n\r\nconst SliderImages = ({ list, handleShowImage }) => {\r\n   return (\r\n      <div className=\"swipper-container swiper-tab-card-movie\">\r\n         <Swiper\r\n            slidesPerView={1}\r\n            slidesPerGroup={1}\r\n            keyboard={{\r\n               enabled: true,\r\n            }}\r\n            scrollbar={true}\r\n            navigation={true}\r\n            breakpoints={{\r\n               991: {\r\n                  slidesPerView: 4,\r\n               },\r\n               768: {\r\n                  slidesPerView: 3,\r\n               },\r\n               565: {\r\n                  slidesPerView: 2,\r\n               },\r\n            }}\r\n         >\r\n            {list.map((item) => (\r\n               <SwiperSlide key={item.file_path}>\r\n                  <CardImage image={item} handleShowImage={handleShowImage} />\r\n               </SwiperSlide>\r\n            ))}\r\n         </Swiper>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SliderImages;\r\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react.js\";\r\nimport SwiperCore, {\r\n   Keyboard,\r\n   Scrollbar,\r\n   Navigation,\r\n   Pagination,\r\n} from \"swiper\";\r\nimport CardImage from \"../../CardImage\";\r\nSwiperCore.use([Keyboard, Scrollbar, Navigation, Pagination]);\r\n\r\nconst SliderPosters = ({ list, handleShowImage }) => {\r\n   return (\r\n      <div className=\"swipper-container swiper-tab-card-movie\">\r\n         <Swiper\r\n            slidesPerView={1.5}\r\n            slidesPerGroup={1}\r\n            keyboard={{\r\n               enabled: true,\r\n            }}\r\n            scrollbar={true}\r\n            navigation={true}\r\n            breakpoints={{\r\n               991: {\r\n                  slidesPerView: 8,\r\n               },\r\n               768: {\r\n                  slidesPerView: 6,\r\n               },\r\n               565: {\r\n                  slidesPerView: 4,\r\n               },\r\n               450: {\r\n                  slidesPerView: 3,\r\n               },\r\n            }}\r\n         >\r\n            {list.map((item) => (\r\n               <SwiperSlide key={item.file_path}>\r\n                  <CardImage image={item} handleShowImage={handleShowImage} />\r\n               </SwiperSlide>\r\n            ))}\r\n         </Swiper>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SliderPosters;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MoviesService } from \"../API/api\";\r\nimport { useGlobalState } from \"../GlobalState\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\nimport Loader from \"./UI/Loader/Loader\";\r\nimport SliderMovies from \"./UI/Sliders/SliderMovies\";\r\n\r\nfunction RecommendedMovies({ id }) {\r\n   const { language } = useGlobalState();\r\n   const [listOfRecommendedMovies, setListOfRecommendedMovies] = useState([]);\r\n\r\n   const [\r\n      fetchListOfRecommendedMoviesById,\r\n      isListOfRecommendedMoviesByIdLoading,\r\n      listOfRecommendedMoviesByIdError,\r\n   ] = useFetching(async () => {\r\n      const response = await MoviesService.getListOfRecommendedMoviesById(\r\n         language,\r\n         id\r\n      );\r\n      setListOfRecommendedMovies(response.results);\r\n   });\r\n\r\n   useEffect(() => {\r\n      fetchListOfRecommendedMoviesById();\r\n   }, [id]);\r\n\r\n   return (\r\n      <section className=\"mb-5\">\r\n         <h2 className=\"title\">Recommendations</h2>\r\n         {isListOfRecommendedMoviesByIdLoading && (\r\n            <h2 className=\"h2\">{listOfRecommendedMoviesByIdError}</h2>\r\n         )}\r\n         {isListOfRecommendedMoviesByIdLoading ? (\r\n            <Loader />\r\n         ) : (\r\n            [\r\n               listOfRecommendedMovies.length > 0 ? (\r\n                  <SliderMovies listMovies={listOfRecommendedMovies} />\r\n               ) : (\r\n                  <div>We don't have enough data to suggest any films.</div>\r\n               ),\r\n            ]\r\n         )}\r\n      </section>\r\n   );\r\n}\r\n\r\nexport default RecommendedMovies;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { Row, Col, Tabs, Tab } from \"react-bootstrap\";\r\nimport { MoviesService } from \"../API/api\";\r\nimport { getDate } from \"../utils/getDate\";\r\nimport { useGlobalState } from \"../GlobalState\";\r\nimport { StarFill, StopwatchFill } from \"react-bootstrap-icons\";\r\nimport AddRemoveFromWatchList from \"../components/AddRemoveFromWatchList\";\r\nimport AddRemoveFromWatched from \"../components/AddRemoveFromWatched\";\r\nimport ButtonPlay from \"../components/UI/Buttons/ButtonPlay\";\r\nimport ModalTrailer from \"../components/UI/Modals/ModalTrailer\";\r\nimport ModalImage from \"../components/UI/Modals/ModalImage\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\nimport SliderCastAndCrew from \"../components/UI/Sliders/SliderCastAndCrew\";\r\nimport SliderTrailer from \"../components/UI/Sliders/SliderTrailer\";\r\nimport SliderImages from \"../components/UI/Sliders/SliderImages\";\r\nimport SliderPosters from \"../components/UI/Sliders/SliderPosters\";\r\nimport Loader from \"../components/UI/Loader/Loader\";\r\nimport RecommendedMovies from \"../components/RecommendedMovies\";\r\n\r\nfunction MovieDescriptionPage() {\r\n   const IMG_API = \"https://image.tmdb.org/t/p/w500\";\r\n   let params = useParams();\r\n   let router = useHistory();\r\n   const [movie, setMovie] = useState({});\r\n   const [listCast, setListCast] = useState([]);\r\n   const [listCrew, setListCrew] = useState([]);\r\n   const [listTrailers, setListVideo] = useState([]);\r\n   const [keyTrailer, setKeyTrailer] = useState(\"\");\r\n   const [listBackdrops, setListBackdrops] = useState([]);\r\n   const [listPosters, setListPosters] = useState([]);\r\n   const [filePath, setFilePath] = useState(\"\");\r\n   const [showTrailer, setShowTrailer] = useState(false);\r\n   const [showImage, setShowImage] = useState(false);\r\n   const { language } = useGlobalState();\r\n\r\n   function handleShow(key) {\r\n      setKeyTrailer(key);\r\n      setShowTrailer(true);\r\n   }\r\n\r\n   function handleShowImage(file) {\r\n      setFilePath(file);\r\n      setShowImage(true);\r\n   }\r\n\r\n   const [fetchMovieById, isMovieByIdLoading, movieByIdError] = useFetching(\r\n      async () => {\r\n         const response = await MoviesService.getMovieById(language, params.id);\r\n         setMovie(response);\r\n      }\r\n   );\r\n\r\n   async function fetchCastAndCrewMovie() {\r\n      const response = await MoviesService.getCastAndCrewMovieById(\r\n         language,\r\n         params.id\r\n      );\r\n      setListCast(response.cast);\r\n      setListCrew(response.crew);\r\n   }\r\n\r\n   async function fetchVideosMovie() {\r\n      const response = await MoviesService.getVideosMovieById(\r\n         language,\r\n         params.id\r\n      );\r\n      setListVideo(response.results);\r\n   }\r\n\r\n   async function fetchImagesMovie() {\r\n      const response = await MoviesService.getImagesMovieById(params.id);\r\n      setListBackdrops(response.backdrops);\r\n      setListPosters(response.posters);\r\n   }\r\n\r\n   useEffect(() => {\r\n      fetchMovieById();\r\n      fetchCastAndCrewMovie();\r\n      fetchVideosMovie();\r\n      fetchImagesMovie();\r\n   }, [params.id]);\r\n\r\n   return (\r\n      <div className=\"container\">\r\n         {isMovieByIdLoading && <h2 className=\"h2\">{movieByIdError}</h2>}\r\n         {isMovieByIdLoading ? (\r\n            <Loader />\r\n         ) : (\r\n            [\r\n               movie && (\r\n                  <section className=\"mb-5\">\r\n                     <Row className=\"g-4\">\r\n                        <Col sm={4}>\r\n                           <div>\r\n                              <img\r\n                                 className=\"img-fluid\"\r\n                                 src={\r\n                                    movie.poster_path\r\n                                       ? IMG_API + movie.poster_path\r\n                                       : \"assets/img/camera.jpg\"\r\n                                 }\r\n                                 alt={movie.title}\r\n                              />\r\n                           </div>\r\n                        </Col>\r\n                        <Col sm={8}>\r\n                           <h1 className=\"h1 mb-2\">{movie?.title}</h1>\r\n                           <div className=\"movie__runtime mb-4\">\r\n                              <StopwatchFill />\r\n                              {movie?.runtime} min\r\n                           </div>\r\n                           <div className=\"rating mb-3\">\r\n                              <StarFill />\r\n                              <div>\r\n                                 <div className=\"rating__average\">\r\n                                    {movie?.vote_average}\r\n                                 </div>\r\n                                 <div className=\"rating__count\">\r\n                                    {movie.vote_count && [\r\n                                       movie?.vote_count.toString().length > 3\r\n                                          ? `${movie.vote_count\r\n                                               .toString()\r\n                                               .slice(0, -3)}K`\r\n                                          : movie.vote_count,\r\n                                    ]}\r\n                                 </div>\r\n                              </div>\r\n                           </div>\r\n                           <Row className=\"g-2 g-sm-4 mb-3\">\r\n                              <Col sm={3} className=\"movie__subtitle\">\r\n                                 {language === \"en-US\"\r\n                                    ? \"Original title\"\r\n                                    : \"Оригинальный заголовок\"}\r\n                              </Col>\r\n                              <Col sm={9} className=\"movie__info\">\r\n                                 {movie?.original_title}\r\n                              </Col>\r\n                           </Row>\r\n                           <Row className=\"g-2 g-sm-4 mb-3\">\r\n                              <Col sm={3} className=\"movie__subtitle\">\r\n                                 Tagline\r\n                              </Col>\r\n                              <Col sm={9} className=\"movie__info fst-italic\">\r\n                                 \"{movie.tagline ? movie.tagline : \"-\"}\"\r\n                              </Col>\r\n                           </Row>\r\n                           <Row className=\"g-2 g-sm-4 mb-3\">\r\n                              <Col sm={3} className=\"movie__subtitle\">\r\n                                 Country\r\n                              </Col>\r\n                              <Col sm={9} className=\"movie__info\">\r\n                                 {movie.production_countries &&\r\n                                    movie.production_countries\r\n                                       .map((item) => item.name)\r\n                                       .join(\", \")}\r\n                              </Col>\r\n                           </Row>\r\n                           <Row className=\"g-2 g-sm-4 mb-3\">\r\n                              <Col sm={3} className=\"movie__subtitle\">\r\n                                 Genre\r\n                              </Col>\r\n                              <Col sm={9} className=\"movie__info\">\r\n                                 {movie.genres &&\r\n                                    movie.genres.map((item, i, arr) => (\r\n                                       <span\r\n                                          key={item.name}\r\n                                          className=\"link-small\"\r\n                                          onClick={() =>\r\n                                             router.push(\r\n                                                `/movies/${item.name\r\n                                                   .toLowerCase()\r\n                                                   .replace(/\\s/g, \"_\")}`\r\n                                             )\r\n                                          }\r\n                                       >\r\n                                          {item.name}\r\n                                          {i !== arr.length - 1 ? \", \" : \"\"}\r\n                                       </span>\r\n                                    ))}\r\n                              </Col>\r\n                           </Row>\r\n                           <Row className=\"g-2 g-sm-4 mb-3\">\r\n                              <Col sm={3} className=\"movie__subtitle\">\r\n                                 Release date\r\n                              </Col>\r\n                              <Col sm={9} className=\"movie__info\">\r\n                                 {movie.release_date\r\n                                    ? getDate(movie.release_date)\r\n                                    : \"-\"}\r\n                              </Col>\r\n                           </Row>\r\n                           <Row className=\"g-2 g-sm-4 mb-3\">\r\n                              <Col sm={3} className=\"movie__subtitle\">\r\n                                 Budget\r\n                              </Col>\r\n                              <Col sm={9} className=\"movie__info\">\r\n                                 {movie.budget\r\n                                    ? `$ ${movie.budget\r\n                                         .toString()\r\n                                         .replace(\r\n                                            /(\\d)(?=(\\d{3})+(\\D|$))/g,\r\n                                            \"$1 \"\r\n                                         )}`\r\n                                    : \"-\"}\r\n                              </Col>\r\n                           </Row>\r\n                           <div className=\"mb-3\">\r\n                              <div className=\"movie__subtitle mb-2\">\r\n                                 Description:\r\n                              </div>\r\n                              <div className=\"movie__description\">\r\n                                 {movie?.overview}\r\n                              </div>\r\n                           </div>\r\n                           {listTrailers.length > 0 && (\r\n                              <div className=\"mb-3\">\r\n                                 <ButtonPlay\r\n                                    variant=\"primary\"\r\n                                    onClick={() =>\r\n                                       handleShow(listTrailers[0].key)\r\n                                    }\r\n                                 >\r\n                                    Watch The Trailer\r\n                                 </ButtonPlay>\r\n                              </div>\r\n                           )}\r\n                           <div className=\"movie-menu\">\r\n                              <AddRemoveFromWatchList\r\n                                 isCard={false}\r\n                                 id={movie.id}\r\n                                 movie={movie}\r\n                              />\r\n                              <AddRemoveFromWatched\r\n                                 isCard={false}\r\n                                 id={movie.id}\r\n                                 movie={movie}\r\n                              />\r\n                           </div>\r\n                        </Col>\r\n                     </Row>\r\n                  </section>\r\n               ),\r\n            ]\r\n         )}\r\n         <section className=\"mb-5\">\r\n            <Tabs\r\n               defaultActiveKey=\"1\"\r\n               id=\"tab-movie\"\r\n               className=\"nav-tab-movie mb-4\"\r\n            >\r\n               {listCast.length > 0 && (\r\n                  <Tab eventKey=\"1\" title=\"Cast\">\r\n                     <SliderCastAndCrew list={listCast} />\r\n                  </Tab>\r\n               )}\r\n               {listCrew.length > 0 && (\r\n                  <Tab eventKey=\"2\" title=\"Crew\">\r\n                     <SliderCastAndCrew list={listCrew} />\r\n                  </Tab>\r\n               )}\r\n               {listTrailers.length > 0 && (\r\n                  <Tab eventKey=\"3\" title=\"Video\">\r\n                     <SliderTrailer\r\n                        listTrailers={listTrailers}\r\n                        handleShow={handleShow}\r\n                     />\r\n                  </Tab>\r\n               )}\r\n               {listBackdrops.length > 0 && (\r\n                  <Tab eventKey=\"4\" title=\"Backdrops\">\r\n                     <SliderImages\r\n                        list={listBackdrops}\r\n                        handleShowImage={handleShowImage}\r\n                     />\r\n                  </Tab>\r\n               )}\r\n               {listPosters.length > 0 && (\r\n                  <Tab eventKey=\"5\" title=\"Posters\">\r\n                     <SliderPosters\r\n                        list={listPosters}\r\n                        handleShowImage={handleShowImage}\r\n                     />\r\n                  </Tab>\r\n               )}\r\n            </Tabs>\r\n         </section>\r\n         <RecommendedMovies id={params.id} />\r\n         {listTrailers && (\r\n            <ModalTrailer\r\n               keyTrailer={keyTrailer}\r\n               showTrailer={showTrailer}\r\n               onHide={() => setShowTrailer(false)}\r\n            />\r\n         )}\r\n         {listBackdrops && listPosters && (\r\n            <ModalImage\r\n               filePath={filePath}\r\n               showImage={showImage}\r\n               onHide={() => setShowImage(false)}\r\n            />\r\n         )}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default MovieDescriptionPage;\r\n","import React from \"react\";\r\nimport { useGlobalState } from \"../GlobalState\";\r\nimport ListMovies from \"../components/ListMovies\";\r\n\r\nfunction Watched() {\r\n   const { watched } = useGlobalState();\r\n\r\n   return (\r\n      <section className=\"page-list\">\r\n         <div className=\"page-list__body container\">\r\n            <h1 className=\"title\">Watched</h1>\r\n            {watched.length > 0 ? (\r\n               <ListMovies movies={watched} />\r\n            ) : (\r\n               <div className=\"no-movies\">\r\n                  <h2 className=\"no-movies__title\">No movies</h2>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </section>\r\n   );\r\n}\r\n\r\nexport default Watched;\r\n","import Main from '../pages/Main'\r\nimport SearchPage from '../pages/SearchPage'\r\nimport Movies from '../pages/Movies'\r\nimport CollectionsMovies from '../pages/CollectionsMovies'\r\nimport GenresMovies from '../pages/GenresMovies'\r\nimport MovieDescriptionPage from '../pages/MovieDescriptionPage'\r\nimport WatchList from '../pages/WatchList'\r\nimport Watched from '../pages/Watched'\r\n// import Error from '../pages/Error';\r\n\r\nexport const routes = [\r\n   { component: Main, path: \"/\", exact: true },\r\n   { component: SearchPage, path: \"/search\", exact: true },\r\n   { component: Movies, path: \"/movies\", exact: true },\r\n   {\r\n      component: CollectionsMovies,\r\n      path: \"/collections/:collection\",\r\n      exact: true,\r\n   },\r\n   { component: GenresMovies, path: \"/movies/:name\", exact: true },\r\n   { component: MovieDescriptionPage, path: \"/watch/:id\", exact: true },\r\n   { component: WatchList, path: \"/watchlist\", exact: true },\r\n   { component: Watched, path: \"/watched\", exact: true },\r\n];\r\n","import React from 'react';\r\nimport { useGlobalState } from '../GlobalState';\r\nimport ListMovies from '../components/ListMovies';\r\n\r\nfunction WatchList() {\r\n   const { watchList } = useGlobalState();\r\n\r\n   return (\r\n      <section className=\"page-list\">\r\n         <div className=\"page-list__body container\">\r\n            <h1 className=\"title\">My Watch List</h1>\r\n            {watchList.length > 0 ? (\r\n               <ListMovies movies={watchList} />\r\n            ) : (\r\n               <div className=\"no-movies\">\r\n                  <h2 className=\"no-movies__title\">\r\n                     No movies in your list, add some!\r\n                  </h2>\r\n               </div>\r\n            )}\r\n         </div>\r\n      </section>\r\n   );\r\n}\r\n\r\nexport default WatchList;\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { routes } from '../router/router';\r\n\r\n\r\nfunction AppRouter() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Switch>\r\n\t\t\t\t{routes.map(route =>\r\n\t\t\t\t\t<Route key={route.path} component={route.component} path={route.path} exact={route.exact} />\r\n\t\t\t\t)}\r\n\t\t\t</Switch>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default AppRouter\r\n","import React from \"react\";\n\nconst Footer = () => {\n   return (\n      <footer className=\"footer\">\n         <div className=\"container\">\n            <div className=\"footer__body\">\n               <div className=\"footer__author mb-2\">\n                  <a\n                     className=\"footer__author_link\"\n                     href=\"https://github.com/andrew-soldat\"\n                     target=\"blank\"\n                  >\n                     <img\n                        className=\"footer__author_icon\"\n                        src=\"assets/img/icon-github.svg\"\n                        alt=\"\"\n                     />\n                     Andrew Blishch\n                  </a>\n               </div>\n               <div>© 2022</div>\n            </div>\n         </div>\n      </footer>\n   );\n};\nexport default Footer;\n","import Header from './components/Header';\nimport { HashRouter } from 'react-router-dom';\nimport AppRouter from './components/AppRouter';\nimport { GlobalProvider } from './GlobalState';\nimport Footer from './components/Footer';\n\nfunction App() {\n   return (\n      <GlobalProvider>\n         <HashRouter>\n            <div className=\"wrapper\">\n               <Header />\n               <div className=\"page py-5\">\n                  <AppRouter />\n               </div>\n               <Footer />\n            </div>\n         </HashRouter>\n      </GlobalProvider>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'swiper/swiper.scss';\nimport 'swiper/modules/navigation/navigation.scss';\nimport 'swiper/modules/pagination/pagination.scss';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}