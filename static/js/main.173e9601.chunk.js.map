{"version":3,"sources":["API/api.js","AppReducer.js","GlobalState.js","hooks/useFetching.js","components/UI/Inputs/Input.jsx","utils/getMovieById.js","components/AddRemoveFromWatchList.jsx","components/AddRemoveFromWatched.jsx","components/CardMovie.jsx","utils/setVoteClass.js","components/ListMovies.jsx","components/SearchHeader.jsx","components/Header.jsx","components/UI/Loader/Loader.jsx","components/LinkViewAllMovies.jsx","components/UI/Sliders/SliderMovies.jsx","pages/Main.jsx","components/UI/Buttons/ButtonShowMore.jsx","pages/SearchPage.jsx","components/UI/Links/LinkHeader.jsx","components/LinkViewAllMoviesByGenre.jsx","components/UI/Sliders/SliderGenres.jsx","pages/Movies.jsx","pages/CollectionsMovies.jsx","pages/GenresMovies.jsx","utils/getGenre.js","utils/getDate.js","components/UI/Buttons/ButtonPlay.jsx","components/UI/Modals/ModalTrailer.jsx","components/UI/Modals/ModalImage.jsx","components/CardCastAndCrew.jsx","components/UI/Sliders/SliderCastAndCrew.jsx","components/CardTrailer.jsx","components/UI/Sliders/SliderTrailer.jsx","components/CardImage.jsx","components/UI/Sliders/SliderImages.jsx","components/UI/Sliders/SliderPosters.jsx","components/RecommendedMovies.jsx","pages/MovieDescriptionPage.jsx","pages/Watched.jsx","router/router.js","pages/WatchList.jsx","components/AppRouter.jsx","components/Footer.jsx","App.js","index.js"],"names":["instance","axios","create","baseURL","apiKey","MoviesService","language","get","response","data","collection","page","id","query","AppReducer","state","action","type","watchList","payload","filter","watch","watched","initialState","localStorage","getItem","JSON","parse","collections","listGenres","name","StateContext","React","createContext","useGlobalState","useContext","GlobalProvider","children","useReducer","dispatch","useEffect","setItem","stringify","Provider","value","addMovieToWatchList","movie","removeMovieFromWatchList","addMovieToWatched","removeMovieFromWatched","toggleLanguage","useFetching","callback","useState","isLoading","setIsLoading","error","setError","fetching","a","message","Input","props","getMovieById","array","find","AddRemoveFromWatchList","isCard","watchListDisabled","OverlayTrigger","placement","overlay","Tooltip","className","onClick","AddRemoveFromWatched","watchedDisabled","CardMovie","vote","isHeader","handleToggle","IMG_API","router","useHistory","genre","setGenre","genres","i","genre_ids","fetchListGenres","push","src","poster_path","alt","title","release_date","substring","Col","sm","md","lg","vote_average","toFixed","ListMovies","movies","length","map","Row","SearchHeader","isActiveInput","setIsActiveInput","isActiveListMovie","setIsActiveListMovie","setMovies","searchQuery","setSearchQuery","results","fetchMovies","resetInputField","onChange","e","target","placeholder","required","to","pathname","Header","Loader","Spinner","animation","variant","LinkViewAllMovies","SwiperCore","use","Keyboard","Scrollbar","Navigation","Pagination","SliderMovies","listMovies","slidesPerView","spaceBetween","slidesPerGroup","keyboard","enabled","scrollbar","navigation","breakpoints","toString","Main","moviesTrending","setMoviesTrending","fetchListMoviesTrending","isMoviesTrendingLoading","moviesTrendingError","ButtonShowMore","SearchPage","useLocation","currentPage","setCurrentPage","totalPages","setTotalPages","isActive","setIsActive","total_pages","isMoviesLoading","prevState","LinkHeader","LinkViewAllMoviesByGenres","toLowerCase","replace","SliderGenres","LinkViewAllMoviesByGenre","Movies","setListGenre","moviesNowPlaying","setMoviesNowPlaying","moviesPopular","setMoviesPopular","moviesTopRated","setMoviesTopRated","fetchListGenresPlaying","isListGenresLoading","listGenresError","fetchListMoviesNowPlaying","isMoviesNowPlayingLoading","moviesNowPlayingError","fetchListMoviesPopular","isMoviesPopularLoading","moviesPopularError","fetchListMoviesTopRated","isMoviesTopRatedLoading","moviesTopRatedError","CollectionsMovies","params","useParams","currentHeader","item","fetchListMovies","moviesError","GenresMovies","getDate","date","arrMonth","day","slice","year","dataMounth","mounth","ButtonPlay","ModalTrailer","Modal","show","showTrailer","size","centered","closeButton","Body","keyTrailer","frameBorder","allow","allowFullScreen","ModalImage","showImage","dialogClassName","filePath","CardCastAndCrew","profile_path","character","job","SliderCastAndCrew","list","credit_id","CardTrailer","trailer","handleShow","key","SliderTrailer","listTrailers","CardImage","image","handleShowImage","file_path","SliderImages","SliderPosters","RecommendedMovies","listOfRecommendedMovies","setListOfRecommendedMovies","fetchListOfRecommendedMoviesById","isListOfRecommendedMoviesByIdLoading","listOfRecommendedMoviesByIdError","MovieDescriptionPage","setMovie","listCast","setListCast","listCrew","setListCrew","setListVideo","setKeyTrailer","listBackdrops","setListBackdrops","listPosters","setListPosters","setFilePath","setShowTrailer","setShowImage","file","fetchMovieById","isMovieByIdLoading","movieByIdError","cast","crew","backdrops","posters","fetchCastAndCrewMovie","fetchVideosMovie","fetchImagesMovie","runtime","vote_count","original_title","tagline","production_countries","join","arr","budget","overview","Tabs","defaultActiveKey","Tab","eventKey","onHide","Watched","routes","component","path","exact","AppRouter","route","Footer","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.173e9601.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n   baseURL: \"https://api.themoviedb.org/3/\",\n});\n\nconst apiKey = \"076fc865efeb5c33f6c3d84f0496217d\";\n\nexport const MoviesService = {\n   async getTrendingMovies(language) {\n      const response = await instance.get(\n         `trending/movie/day?api_key=${apiKey}&language=${language}`\n      );\n      return response.data;\n   },\n\n   async getCollectionMovies(language, collection, page = 1) {\n      const response = await instance.get(\n         `movie/${collection}?api_key=${apiKey}&language=${language}&page=${page}`\n      );\n      return response.data;\n   },\n\n   async getListGenres(language) {\n      const response = await instance.get(\n         `genre/movie/list?api_key=${apiKey}&language=${language}`\n      );\n      return response.data;\n   },\n\n   async getListMoviesByGenre(language, id, page = 1) {\n      const response = await instance.get(\n         `discover/movie?api_key=${apiKey}&language=${language}&with_genres=${id}&include_adult=false&include_video=false&page=${page}`\n      );\n      return response.data;\n   },\n\n   async searchMovies(language, query, page = 1) {\n      const response = await instance.get(\n         `search/movie?api_key=${apiKey}&language=${language}&page=${page}&include_adult=false&query=${query}`\n      );\n      return response.data;\n   },\n\n   async getMovieById(language, id) {\n      const response = await instance.get(\n         `movie/${id}?api_key=${apiKey}&language=${language}`\n      );\n      return response.data;\n   },\n\n   async getVideosMovieById(language, id) {\n      const response = await instance.get(\n         `movie/${id}/videos?api_key=${apiKey}&language=${language}`\n      );\n      return response.data;\n   },\n\n   async getCastAndCrewMovieById(language, id) {\n      const response = await instance.get(\n         `movie/${id}/credits?api_key=${apiKey}&language=${language}`\n      );\n      return response.data;\n   },\n\n   async getImagesMovieById(id) {\n      const response = await instance.get(\n         `movie/${id}/images?api_key=${apiKey}`\n      );\n      return response.data;\n   },\n\n   async getListOfRecommendedMoviesById(language, id) {\n      const response = await instance.get(\n         `movie/${id}/recommendations?api_key=${apiKey}&language=${language}`\n      );\n      return response.data;\n   },\n};\n","const AppReducer = (state, action) => {\n   switch (action.type) {\n      case \"ADD_MOVIE_TO_WATCH_LIST\":\n         return {\n            ...state,\n            watchList: [...state.watchList, action.payload],\n         };\n      case \"REMOVE_MOVIE_FROM_WATCH_LIST\":\n         return {\n            ...state,\n            watchList: state.watchList.filter(\n               (watch) => watch.id !== action.payload.id\n            ),\n         };\n      case \"ADD_MOVIE_TO_WATCHED\":\n         return {\n            ...state,\n            watchList: state.watchList.filter(\n               (watch) => watch.id !== action.payload.id\n            ),\n            watched: [...state.watched, action.payload],\n         };\n      case \"REMOVE_MOVIE_FROM_WATCHED\":\n         return {\n            ...state,\n            watchList: [...state.watchList, action.payload],\n            watched: state.watched.filter(\n               (watch) => watch.id !== action.payload.id\n            ),\n         };\n      case \"TOGGLE_LANGUAGE\":\n         return {\n            ...state,\n            language: action.payload,\n         };\n      default:\n         return state;\n   }\n};\nexport default AppReducer;\n","import React, { useReducer, useContext, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\nconst initialState = {\n   language: localStorage.getItem(\"language\")\n      ? JSON.parse(localStorage.getItem(\"language\"))\n      : \"en-US\",\n   collections: [\"popular\", \"now_playing\", \"top_rated\"],\n   listGenres: [\n      {\n         id: 28,\n         name: \"Action\",\n      },\n      {\n         id: 12,\n         name: \"Adventure\",\n      },\n      {\n         id: 16,\n         name: \"Animation\",\n      },\n      {\n         id: 35,\n         name: \"Comedy\",\n      },\n      {\n         id: 80,\n         name: \"Crime\",\n      },\n      {\n         id: 99,\n         name: \"Documentary\",\n      },\n      {\n         id: 18,\n         name: \"Drama\",\n      },\n      {\n         id: 10751,\n         name: \"Family\",\n      },\n      {\n         id: 14,\n         name: \"Fantasy\",\n      },\n      {\n         id: 36,\n         name: \"History\",\n      },\n      {\n         id: 27,\n         name: \"Horror\",\n      },\n      {\n         id: 10402,\n         name: \"Music\",\n      },\n      {\n         id: 9648,\n         name: \"Mystery\",\n      },\n      {\n         id: 10749,\n         name: \"Romance\",\n      },\n      {\n         id: 878,\n         name: \"Science Fiction\",\n      },\n      {\n         id: 10770,\n         name: \"TV Movie\",\n      },\n      {\n         id: 53,\n         name: \"Thriller\",\n      },\n      {\n         id: 10752,\n         name: \"War\",\n      },\n      {\n         id: 37,\n         name: \"Western\",\n      },\n   ],\n   watchList: localStorage.getItem(\"watchList\")\n      ? JSON.parse(localStorage.getItem(\"watchList\"))\n      : [],\n   watched: localStorage.getItem(\"watched\")\n      ? JSON.parse(localStorage.getItem(\"watched\"))\n      : [],\n};\n\nconst StateContext = React.createContext();\n\nexport const useGlobalState = () => {\n   return useContext(StateContext);\n};\n\nexport const GlobalProvider = ({ children }) => {\n   let [state, dispatch] = useReducer(AppReducer, initialState);\n\n   const addMovieToWatchList = (movie) => {\n      dispatch({ type: \"ADD_MOVIE_TO_WATCH_LIST\", payload: movie });\n   };\n   const removeMovieFromWatchList = (movie) => {\n      dispatch({ type: \"REMOVE_MOVIE_FROM_WATCH_LIST\", payload: movie });\n   };\n   const addMovieToWatched = (movie) => {\n      dispatch({ type: \"ADD_MOVIE_TO_WATCHED\", payload: movie });\n   };\n   const removeMovieFromWatched = (movie) => {\n      dispatch({ type: \"REMOVE_MOVIE_FROM_WATCHED\", payload: movie });\n   };\n\n   const toggleLanguage = (language) => {\n      dispatch({ type: \"TOGGLE_LANGUAGE\", payload: language });\n   };\n\n   useEffect(() => {\n      localStorage.setItem(\"watchList\", JSON.stringify(state.watchList));\n      localStorage.setItem(\"watch\", JSON.stringify(state.watched));\n      localStorage.setItem(\"language\", JSON.stringify(state.language));\n   }, [state]);\n\n   return (\n      <StateContext.Provider\n         value={{\n            language: state.language,\n            collections: state.collections,\n            listGenres: state.listGenres,\n            watchList: state.watchList,\n            watched: state.watched,\n            addMovieToWatchList,\n            removeMovieFromWatchList,\n            addMovieToWatched,\n            removeMovieFromWatched,\n            toggleLanguage,\n         }}\n      >\n         {children}\n      </StateContext.Provider>\n   );\n};\n","import { useState } from \"react\";\n\nexport const useFetching = (callback) => {\n   const [isLoading, setIsLoading] = useState(false);\n   const [error, setError] = useState(\"\");\n\n   const fetching = async () => {\n      try {\n         setIsLoading(true);\n         await callback();\n      } catch (e) {\n         setError(e.message);\n      } finally {\n         setIsLoading(false);\n      }\n   };\n\n   return [fetching, isLoading, error];\n};\n","import React from \"react\";\n\nconst Input = (props) => {\n   return <input {...props} />;\n};\n\nexport default Input;\n","export default function getMovieById(array, id) {\r\n   return array.find((movie) => movie.id === id);\r\n}\r\n","import React from \"react\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport { Bookmark, BookmarkFill } from \"react-bootstrap-icons\";\r\nimport { useGlobalState } from \"../GlobalState\";\r\nimport getMovieById from \"../utils/getMovieById\";\r\n\r\nfunction AddRemoveFromWatchList({ isCard, id, movie }) {\r\n   const { watchList, addMovieToWatchList, removeMovieFromWatchList } =\r\n      useGlobalState();\r\n\r\n   const storedMovie = getMovieById(watchList, id);\r\n   const watchListDisabled = storedMovie ? true : false;\r\n\r\n   return (\r\n      <>\r\n         {isCard && [\r\n            watchListDisabled ? (\r\n               <OverlayTrigger\r\n                  placement=\"top\"\r\n                  overlay={\r\n                     <Tooltip id=\"tooltip-top\">Remove from watchList</Tooltip>\r\n                  }\r\n               >\r\n                  <div\r\n                     className=\"mb-2\"\r\n                     onClick={() => removeMovieFromWatchList(movie)}\r\n                  >\r\n                     <BookmarkFill />\r\n                  </div>\r\n               </OverlayTrigger>\r\n            ) : (\r\n               <OverlayTrigger\r\n                  placement=\"top\"\r\n                  overlay={<Tooltip id=\"tooltip-top\">Add to WatchList</Tooltip>}\r\n               >\r\n                  <div\r\n                     className=\"mb-2\"\r\n                     onClick={() => addMovieToWatchList(movie)}\r\n                  >\r\n                     <Bookmark />\r\n                  </div>\r\n               </OverlayTrigger>\r\n            ),\r\n         ]}\r\n         {!isCard && [\r\n            watchListDisabled ? (\r\n               <div\r\n                  className=\"movie-menu__btn\"\r\n                  onClick={() => removeMovieFromWatchList(movie)}\r\n               >\r\n                  <BookmarkFill />\r\n                  <div className=\"ms-2\">Remove from watchList</div>\r\n               </div>\r\n            ) : (\r\n               <div\r\n                  className=\"movie-menu__btn\"\r\n                  onClick={() => addMovieToWatchList(movie)}\r\n               >\r\n                  {\" \"}\r\n                  <Bookmark />\r\n                  <div className=\"ms-2\">Add to WatchList</div>\r\n               </div>\r\n            ),\r\n         ]}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default AddRemoveFromWatchList;\r\n","import React from \"react\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport { Eye, EyeSlash } from \"react-bootstrap-icons\";\r\nimport { useGlobalState } from \"../GlobalState\";\r\nimport getMovieById from \"../utils/getMovieById\";\r\n\r\nfunction AddRemoveFromWatched({ isCard, id, movie }) {\r\n   const { watched, addMovieToWatched, removeMovieFromWatched } =\r\n      useGlobalState();\r\n\r\n   const storedMovieWatched = getMovieById(watched, id);\r\n   const watchedDisabled = storedMovieWatched ? true : false;\r\n\r\n   return (\r\n      <>\r\n         {isCard && [\r\n            watchedDisabled ? (\r\n               <OverlayTrigger\r\n                  placement=\"top\"\r\n                  overlay={\r\n                     <Tooltip id=\"tooltip-top\">Remove from watched</Tooltip>\r\n                  }\r\n               >\r\n                  <div onClick={() => removeMovieFromWatched(movie)}>\r\n                     <EyeSlash />\r\n                  </div>\r\n               </OverlayTrigger>\r\n            ) : (\r\n               <OverlayTrigger\r\n                  placement=\"top\"\r\n                  overlay={<Tooltip id=\"tooltip-top\">Watched</Tooltip>}\r\n               >\r\n                  <div onClick={() => addMovieToWatched(movie)}>\r\n                     <Eye />\r\n                  </div>\r\n               </OverlayTrigger>\r\n            ),\r\n         ]}\r\n         {!isCard && [\r\n            watchedDisabled ? (\r\n               <div\r\n                  className=\"movie-menu__btn\"\r\n                  onClick={() => removeMovieFromWatched(movie)}\r\n               >\r\n                  <EyeSlash />\r\n                  <div className=\"ms-2\">Remove from watched</div>\r\n               </div>\r\n            ) : (\r\n               <div\r\n                  className=\"movie-menu__btn\"\r\n                  onClick={() => addMovieToWatched(movie)}\r\n               >\r\n                  <Eye />\r\n                  <div className=\"ms-2\">Watched</div>\r\n               </div>\r\n            ),\r\n         ]}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default AddRemoveFromWatched;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport { PlayFill } from \"react-bootstrap-icons\";\r\nimport { useGlobalState } from \"../GlobalState\";\r\nimport setVoteClass from \"../utils/setVoteClass\";\r\nimport AddRemoveFromWatchList from \"./AddRemoveFromWatchList\";\r\nimport AddRemoveFromWatched from \"./AddRemoveFromWatched\";\r\nimport { MoviesService } from \"./../API/api\";\r\n\r\nfunction CardMovie({ movie, isHeader, handleToggle }) {\r\n   const IMG_API = \"https://image.tmdb.org/t/p/w500\";\r\n   let router = useHistory();\r\n   const { language } = useGlobalState();\r\n   const [genre, setGenre] = useState({});\r\n\r\n   async function fetchListGenres() {\r\n      const response = await MoviesService.getListGenres(language);\r\n      setGenre(response.genres.find((i) => i.id === movie.genre_ids[0]));\r\n   }\r\n\r\n   useEffect(() => {\r\n      fetchListGenres();\r\n   }, []);\r\n\r\n   return (\r\n      <>\r\n         {isHeader ? (\r\n            <div\r\n               className=\"search-menu__item\"\r\n               onClick={() => {\r\n                  router.push(`/watch/${movie.id}`);\r\n                  handleToggle();\r\n               }}\r\n            >\r\n               <div className=\"search-menu__img\">\r\n                  <img\r\n                     className=\"img-fluid\"\r\n                     src={\r\n                        movie.poster_path\r\n                           ? IMG_API + movie.poster_path\r\n                           : \"assets/img/camera.jpg\"\r\n                     }\r\n                     alt={movie?.title}\r\n                  />\r\n               </div>\r\n               <div className=\"search-menu__description p-2\">\r\n                  <div className=\"search-menu__title mb-1\">{movie?.title}</div>\r\n                  <div className=\"search-menu__text\">\r\n                     {movie.release_date &&\r\n                        `${movie.release_date.substring(0, 4)},`}{\" \"}\r\n                     {genre?.name}\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         ) : (\r\n            <Col sm={6} md={3} lg={2} className=\"item-movie\">\r\n               <div className=\"item-movie__wrapper\">\r\n                  <div className=\"item-movie__menu\">\r\n                     <AddRemoveFromWatchList\r\n                        isCard={true}\r\n                        id={movie.id}\r\n                        movie={movie}\r\n                     />\r\n                     <AddRemoveFromWatched\r\n                        isCard={true}\r\n                        id={movie.id}\r\n                        movie={movie}\r\n                     />\r\n                  </div>\r\n                  <div\r\n                     className={`item-movie__vote-average ${setVoteClass(\r\n                        movie.vote_average\r\n                     )}`}\r\n                  >\r\n                     {movie.vote_average.toFixed(1)}\r\n                  </div>\r\n                  <div\r\n                     className=\"item-movie__img\"\r\n                     onClick={() => router.push(`/watch/${movie.id}`)}\r\n                  >\r\n                     <img\r\n                        className=\"img-fluid\"\r\n                        src={\r\n                           movie.poster_path\r\n                              ? IMG_API + movie.poster_path\r\n                              : \"assets/img/camera.jpg\"\r\n                        }\r\n                        alt={movie?.title}\r\n                     />\r\n                     <div className=\"item-movie__overlay\">\r\n                        <div>\r\n                           <PlayFill />\r\n                        </div>\r\n                        <div>Watch</div>\r\n                     </div>\r\n                  </div>\r\n                  <div className=\"item-movie__description p-2\">\r\n                     <div\r\n                        className=\"item-movie__title h6 mb-1\"\r\n                        onClick={() => router.push(`/watch/${movie.id}`)}\r\n                     >\r\n                        {movie?.title}\r\n                     </div>\r\n                     <div className=\"item-movie__date\">\r\n                        {movie.release_date &&\r\n                           `${movie.release_date.substring(0, 4)},`}{\" \"}\r\n                        {genre?.name}\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </Col>\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default CardMovie;\r\n","export default function setVoteClass(vote) {\n   if (vote >= 8) {\n      return \"green\";\n   } else if (vote >= 5) {\n      return \"yellow\";\n   } else {\n      return \"red\";\n   }\n}\n","import React from \"react\";\r\nimport CardMovie from \"./CardMovie\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nfunction ListMovies({ movies, isHeader, handleToggle }) {\r\n   return (\r\n      <>\r\n         {isHeader ? (\r\n            [\r\n               movies.length > 0 ? (\r\n                  movies.map((movie) => (\r\n                     <CardMovie\r\n                        key={movie.id}\r\n                        movie={movie}\r\n                        handleToggle={handleToggle}\r\n                        isHeader\r\n                     />\r\n                  ))\r\n               ) : (\r\n                  <div className=\"search-menu__no-results\">Nothing found</div>\r\n               ),\r\n            ]\r\n         ) : (\r\n            <Row className=\"g-4\">\r\n               {movies.map((movie) => (\r\n                  <CardMovie key={movie.id} movie={movie} />\r\n               ))}\r\n            </Row>\r\n         )}\r\n      </>\r\n   );\r\n}\r\n\r\nexport default ListMovies;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MoviesService } from \"../API/api\";\nimport { useGlobalState } from \"../GlobalState\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport Input from \"./UI/Inputs/Input\";\nimport { Search, XLg } from \"react-bootstrap-icons\";\nimport ListMovies from \"./ListMovies\";\n\nconst SearchHeader = () => {\n   const { language } = useGlobalState();\n   const [isActiveInput, setIsActiveInput] = useState(false);\n   const [isActiveListMovie, setIsActiveListMovie] = useState(false);\n   const [movies, setMovies] = useState([]);\n   const [searchQuery, setSearchQuery] = useState(\"\");\n\n   const [fetchMovies] = useFetching(async () => {\n      const response = await MoviesService.searchMovies(language, searchQuery);\n      setMovies(response.results);\n   });\n\n   const onChange = (e) => {\n      setSearchQuery(e.target.value);\n\n      if (e.target.value.length > 1) {\n         setIsActiveListMovie(true);\n         fetchMovies(searchQuery);\n      } else {\n         setMovies([]);\n         setIsActiveListMovie(false);\n      }\n   };\n\n   const handleToggle = () => {\n      setIsActiveInput(!isActiveInput);\n      resetInputField();\n   };\n\n   const resetInputField = () => {\n      setSearchQuery(\"\");\n      setMovies([]);\n      setIsActiveListMovie(false);\n   };\n\n   useEffect(() => {\n      fetchMovies();\n   }, [language]);\n\n   return (\n      <>\n         <div className=\"header-search\">\n            <form\n               className={\n                  isActiveInput\n                     ? \"header-search__form _active\"\n                     : \"header-search__form\"\n               }\n            >\n               <Input\n                  onChange={onChange}\n                  value={searchQuery}\n                  placeholder=\"Search...\"\n                  type=\"text\"\n                  required\n               />\n               <div className=\"header-search__button\" onClick={handleToggle}>\n                  <Search />\n               </div>\n               {isActiveListMovie && (\n                  <div\n                     className=\"header-search__reset\"\n                     onClick={resetInputField}\n                  >\n                     <XLg />\n                  </div>\n               )}\n            </form>\n            {isActiveListMovie && (\n               <div className=\"search-menu\">\n                  <div className=\"search-menu__list\">\n                     <ListMovies\n                        movies={movies}\n                        isHeader={true}\n                        handleToggle={handleToggle}\n                     />\n                  </div>\n                  {movies.length > 0 && (\n                     <Link\n                        className=\"search-menu__all-results\"\n                        to={{\n                           pathname: \"/search\",\n                           state: searchQuery,\n                        }}\n                        onClick={handleToggle}\n                     >\n                        All results\n                     </Link>\n                  )}\n               </div>\n            )}\n         </div>\n         <div\n            className={isActiveInput ? \"overlay _active\" : \"overlay\"}\n            onClick={handleToggle}\n         ></div>\n      </>\n   );\n};\nexport default SearchHeader;\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport SearchHeader from \"./SearchHeader\";\r\n\r\nconst Header = () => {\r\n   return (\r\n      <header className=\"header\">\r\n         <div className=\"container\">\r\n            <div className=\"header__body\">\r\n               <Link to=\"/\" className=\"header__logo\">\r\n                  <img src=\"./assets/img/logo.svg\" alt=\"Logo\" />\r\n               </Link>\r\n               <div className=\"header__nav\">\r\n                  <SearchHeader />\r\n                  <nav className=\"d-flex align-items-center\">\r\n                     <ul className=\"header__list\">\r\n                        <li>\r\n                           <NavLink to=\"/movies\" className=\"header__link\">\r\n                              Movies\r\n                           </NavLink>\r\n                        </li>\r\n                        <li>\r\n                           <NavLink to=\"/watchlist\" className=\"header__link\">\r\n                              Watch List\r\n                           </NavLink>\r\n                        </li>\r\n                        <li>\r\n                           <NavLink to=\"/watched\" className=\"header__link\">\r\n                              Watched\r\n                           </NavLink>\r\n                        </li>\r\n                     </ul>\r\n                  </nav>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </header>\r\n   );\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loader() {\r\n   return (\r\n      <Spinner className=\"mx-auto d-block\" animation=\"border\" variant=\"light\" />\r\n   );\r\n}\r\n\r\nexport default Loader;\r\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\n\nfunction LinkViewAllMovies({ collection }) {\n   let router = useHistory();\n\n   return (\n      <button\n         type=\"button\"\n         className=\"view-all collection\"\n         onClick={() => router.push(`/collections/${collection}`)}\n      >\n         View all\n      </button>\n   );\n}\n\nexport default LinkViewAllMovies;\n","import React from \"react\";\nimport CardMovie from \"../../CardMovie\";\nimport LinkViewAllMovies from \"../../LinkViewAllMovies\";\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react.js\";\nimport SwiperCore, {\n   Keyboard,\n   Scrollbar,\n   Navigation,\n   Pagination,\n} from \"swiper\";\nSwiperCore.use([Keyboard, Scrollbar, Navigation, Pagination]);\n\nconst SliderMovies = ({ listMovies, collection }) => {\n   return (\n      <div className=\"swipper-container\">\n         <Swiper\n            slidesPerView={1}\n            spaceBetween={24}\n            slidesPerGroup={1}\n            keyboard={{\n               enabled: true,\n            }}\n            scrollbar={true}\n            navigation={true}\n            breakpoints={{\n               991: {\n                  slidesPerView: 6,\n                  slidesPerGroup: 6,\n               },\n               768: {\n                  slidesPerView: 4,\n                  slidesPerGroup: 4,\n               },\n               565: {\n                  slidesPerView: 2,\n                  slidesPerGroup: 2,\n               },\n            }}\n         >\n            {listMovies.map((movie) => (\n               <SwiperSlide key={movie.id.toString()}>\n                  <CardMovie movie={movie} />\n               </SwiperSlide>\n            ))}\n            {collection && (\n               <SwiperSlide>\n                  <LinkViewAllMovies collection={collection} />\n               </SwiperSlide>\n            )}\n         </Swiper>\n      </div>\n   );\n};\n\nexport default SliderMovies;\n","import React, { useEffect, useState } from \"react\";\nimport { XLg } from \"react-bootstrap-icons\";\nimport { Link } from \"react-router-dom\";\nimport { MoviesService } from \"../API/api\";\nimport Input from \"../components/UI/Inputs/Input\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport SliderMovies from \"../components/UI/Sliders/SliderMovies\";\nimport { useGlobalState } from \"../GlobalState\";\nimport { useFetching } from \"../hooks/useFetching\";\n\nfunction Main() {\n   const { language } = useGlobalState();\n   const [moviesTrending, setMoviesTrending] = useState([]);\n   const [searchQuery, setSearchQuery] = useState(\"\");\n   const [isActiveInput, setIsActiveInput] = useState(false);\n\n   const onChange = (e) => {\n      setSearchQuery(e.target.value);\n\n      if (e.target.value.length > 1) {\n         setIsActiveInput(true);\n      } else {\n         setIsActiveInput(false);\n      }\n   };\n\n   const resetInputField = () => {\n      setSearchQuery(\"\");\n      setIsActiveInput(false);\n   };\n\n   const [\n      fetchListMoviesTrending,\n      isMoviesTrendingLoading,\n      moviesTrendingError,\n   ] = useFetching(async () => {\n      const response = await MoviesService.getTrendingMovies(language);\n      setMoviesTrending(response.results);\n   });\n\n   useEffect(() => {\n      fetchListMoviesTrending();\n   }, []);\n\n   return (\n      <div className=\"container\">\n         <div className=\"welcome-block mb-5\">\n            <div className=\"welcome-block__greetings\">\n               <h1 className=\"welcome-block__title mb-3\">Welcome.</h1>\n               <h1 className=\"title\">\n                  Millions of movies to discover. Explore now.\n               </h1>\n            </div>\n            <div className=\"welcome-block__search\">\n               <form className=\"main-search-form\">\n                  <div className=\"main-search-form__input\">\n                     <Input\n                        onChange={onChange}\n                        value={searchQuery}\n                        placeholder=\"Search...\"\n                        type=\"text\"\n                        required\n                     />\n                     {isActiveInput && (\n                        <div\n                           className=\"main-search-form__reset\"\n                           onClick={resetInputField}\n                        >\n                           <XLg />\n                        </div>\n                     )}\n                  </div>\n                  <Link\n                     className=\"main-search-form__btn\"\n                     to={{\n                        pathname: \"/search\",\n                        state: searchQuery,\n                     }}\n                  >\n                     Search\n                  </Link>\n               </form>\n            </div>\n         </div>\n         <section className=\"mb-5\">\n            <h2 className=\"title mb-3\">Trending today</h2>\n            {isMoviesTrendingLoading && (\n               <h2 className=\"h2\">{moviesTrendingError}</h2>\n            )}\n            {isMoviesTrendingLoading ? (\n               <Loader />\n            ) : (\n               [\n                  moviesTrending.length > 0 && (\n                     <SliderMovies listMovies={moviesTrending} />\n                  ),\n               ]\n            )}\n         </section>\n      </div>\n   );\n}\n\nexport default Main;\n","import React from \"react\";\n\nfunction ButtonShowMore({ children, ...props }) {\n   return (\n      <button {...props} className=\"show-more\">\n         {children}\n      </button>\n   );\n}\n\nexport default ButtonShowMore;\n","import React, { useState, useEffect } from \"react\";\nimport { MoviesService } from \"../API/api\";\nimport ListMovies from \"../components/ListMovies\";\nimport Input from \"../components/UI/Inputs/Input\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport { useGlobalState } from \"../GlobalState\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport { useLocation } from \"react-router-dom\";\nimport { Search, XLg } from \"react-bootstrap-icons\";\nimport ButtonShowMore from \"../components/UI/Buttons/ButtonShowMore\";\n\nfunction SearchPage() {\n   let { state } = useLocation();\n   const [searchQuery, setSearchQuery] = useState(state || \"\");\n   const [movies, setMovies] = useState([]);\n   const [currentPage, setCurrentPage] = useState(1);\n   const [totalPages, setTotalPages] = useState(0);\n   const [isActive, setIsActive] = useState(state ? true : false);\n   const { language } = useGlobalState();\n\n   const [fetchMovies, isMoviesLoading, movieError] = useFetching(async () => {\n      const response = await MoviesService.searchMovies(\n         language,\n         searchQuery,\n         currentPage\n      );\n      setMovies([...movies, ...response.results]);\n      setTotalPages(response.total_pages);\n   });\n\n   const onChange = (e) => {\n      setSearchQuery(e.target.value);\n\n      if (e.target.value.length > 1) {\n         setIsActive(true);\n         fetchMovies();\n      } else {\n         setMovies([]);\n         setIsActive(false);\n         setCurrentPage(1);\n         setTotalPages(0);\n      }\n   };\n\n   const resetInputField = () => {\n      setSearchQuery(\"\");\n      setMovies([]);\n      setIsActive(false);\n      setCurrentPage(1);\n      setTotalPages(0);\n   };\n\n   const showMore = () => {\n      if (currentPage < totalPages) {\n         setCurrentPage((prevState) => prevState + 1);\n      }\n   };\n\n   useEffect(() => {\n      fetchMovies();\n   }, [currentPage]);\n\n   return (\n      <div className=\"container py-5\">\n         <div className=\"mb-5\">\n            <form className=\"search-form\">\n               <div className=\"search-form__icon\">\n                  <Search />\n               </div>\n               <Input\n                  onChange={onChange}\n                  value={searchQuery}\n                  placeholder=\"Search...\"\n                  type=\"text\"\n                  required\n               />\n               {isActive && (\n                  <div className=\"search-form__reset\" onClick={resetInputField}>\n                     <XLg />\n                  </div>\n               )}\n            </form>\n         </div>\n         {searchQuery.length > 1 &&\n            (isMoviesLoading ? (\n               <Loader />\n            ) : movies.length > 0 ? (\n               <div className=\"mb-5\">\n                  <ListMovies movies={movies} />\n               </div>\n            ) : (\n               <div className=\"no-movies\">\n                  <h2 className=\"no-movies__title\">Nothing found</h2>\n               </div>\n            ))}\n         {totalPages > 1 && currentPage !== totalPages && (\n            <ButtonShowMore\n               onClick={showMore}\n               currentPage={currentPage}\n               totalPages={totalPages}\n               type=\"button\"\n            >\n               Show more\n            </ButtonShowMore>\n         )}\n      </div>\n   );\n}\n\nexport default SearchPage;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { ChevronRight } from 'react-bootstrap-icons';\n\nconst LinkHeader = ({ children, ...props }) => {\n   let router = useHistory();\n\n   return (\n      <h2\n         className=\"title link-header mb-3\"\n         onClick={() => router.push(`/collections/${props.collection}`)}\n      >\n         {children}\n         <ChevronRight className=\"ms-2\" />\n      </h2>\n   );\n};\n\nexport default LinkHeader;\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\n\nfunction LinkViewAllMoviesByGenres({ name }) {\n   let router = useHistory();\n\n   return (\n      <div\n         className=\"view-all\"\n         onClick={() =>\n            router.push(`/movies/${name.toLowerCase().replace(/\\s/g, \"_\")}`)\n         }\n      >\n         <div>\n            <img\n               className=\"img-fluid\"\n               src={`assets/img/icons/${name}.png`}\n               alt={name}\n            />\n         </div>\n         <div className=\"link-genre__name mt-3\">{name}</div>\n      </div>\n   );\n}\n\nexport default LinkViewAllMoviesByGenres;\n","import React from \"react\";\nimport LinkViewAllMoviesByGenre from \"../../../components/LinkViewAllMoviesByGenre\";\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react.js\";\nimport SwiperCore, {\n   Keyboard,\n   Scrollbar,\n   Navigation,\n   Pagination,\n} from \"swiper\";\nSwiperCore.use([Keyboard, Scrollbar, Navigation, Pagination]);\n\nconst SliderGenres = ({ listGenres }) => {\n   return (\n      <div className=\"swipper-container\">\n         <Swiper\n            slidesPerView={1}\n            spaceBetween={24}\n            slidesPerGroup={1}\n            keyboard={{\n               enabled: true,\n            }}\n            scrollbar={true}\n            navigation={true}\n            breakpoints={{\n               991: {\n                  slidesPerView: 6,\n                  slidesPerGroup: 6,\n               },\n               768: {\n                  slidesPerView: 4,\n                  slidesPerGroup: 4,\n               },\n               565: {\n                  slidesPerView: 2,\n                  slidesPerGroup: 2,\n               },\n            }}\n         >\n            {listGenres.map((genre) => (\n               <SwiperSlide key={genre.name}>\n                  <LinkViewAllMoviesByGenre name={genre.name} id={genre.id} />\n               </SwiperSlide>\n            ))}\n         </Swiper>\n      </div>\n   );\n};\n\nexport default SliderGenres;\n","import React, { useState, useEffect } from \"react\";\nimport { MoviesService } from \"../API/api\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport LinkHeader from \"../components/UI/Links/LinkHeader\";\nimport { useGlobalState } from \"../GlobalState\";\nimport SliderMovies from \"../components/UI/Sliders/SliderMovies\";\nimport SliderGenres from \"../components/UI/Sliders/SliderGenres\";\nimport Loader from \"../components/UI/Loader/Loader\";\n\nfunction Movies() {\n   const [listGenres, setListGenre] = useState([]);\n   const [moviesNowPlaying, setMoviesNowPlaying] = useState([]);\n   const [moviesPopular, setMoviesPopular] = useState([]);\n   const [moviesTopRated, setMoviesTopRated] = useState([]);\n   const { language, collections } = useGlobalState();\n\n   const [fetchListGenresPlaying, isListGenresLoading, listGenresError] =\n      useFetching(async () => {\n         const response = await MoviesService.getListGenres(language);\n         setListGenre(response.genres);\n      });\n\n   const [\n      fetchListMoviesNowPlaying,\n      isMoviesNowPlayingLoading,\n      moviesNowPlayingError,\n   ] = useFetching(async () => {\n      const response = await MoviesService.getCollectionMovies(\n         language,\n         collections[0]\n      );\n      setMoviesNowPlaying(response.results);\n   });\n\n   const [fetchListMoviesPopular, isMoviesPopularLoading, moviesPopularError] =\n      useFetching(async () => {\n         const response = await MoviesService.getCollectionMovies(\n            language,\n            collections[1]\n         );\n         setMoviesPopular(response.results);\n      });\n\n   const [\n      fetchListMoviesTopRated,\n      isMoviesTopRatedLoading,\n      moviesTopRatedError,\n   ] = useFetching(async () => {\n      const response = await MoviesService.getCollectionMovies(\n         language,\n         collections[2]\n      );\n      setMoviesTopRated(response.results);\n   });\n\n   useEffect(() => {\n      fetchListGenresPlaying();\n      fetchListMoviesNowPlaying();\n      fetchListMoviesPopular();\n      fetchListMoviesTopRated();\n   }, []);\n\n   return (\n      <div className=\"container py-5\">\n         <section className=\"mb-5\">\n            {isListGenresLoading && <h2 className=\"h2\">{listGenresError}</h2>}\n            {isListGenresLoading ? (\n               <Loader />\n            ) : (\n               [\n                  listGenres.length > 0 && (\n                     <SliderGenres listGenres={listGenres} />\n                  ),\n               ]\n            )}\n         </section>\n         <section className=\"mb-5\">\n            <LinkHeader collection={collections[0]}>Populars now</LinkHeader>\n            {isMoviesPopularLoading && (\n               <h2 className=\"h2\">{moviesPopularError}</h2>\n            )}\n            {isMoviesPopularLoading ? (\n               <Loader />\n            ) : (\n               [\n                  moviesPopular.length > 0 && (\n                     <SliderMovies\n                        listMovies={moviesPopular}\n                        collection={collections[0]}\n                     />\n                  ),\n               ]\n            )}\n         </section>\n         <section className=\"mb-5\">\n            <LinkHeader collection={collections[1]}>\n               Playing now in theatres\n            </LinkHeader>\n            {isMoviesNowPlayingLoading && (\n               <h2 className=\"h2\">{moviesNowPlayingError}</h2>\n            )}\n            {isMoviesNowPlayingLoading ? (\n               <Loader />\n            ) : (\n               [\n                  moviesNowPlaying.length > 0 && (\n                     <SliderMovies\n                        listMovies={moviesNowPlaying}\n                        collection={collections[1]}\n                     />\n                  ),\n               ]\n            )}\n         </section>\n         <section className=\"mb-5\">\n            <LinkHeader collection={collections[2]}>Top Rated</LinkHeader>\n            {isMoviesTopRatedLoading && (\n               <h2 className=\"h2\">{moviesTopRatedError}</h2>\n            )}\n            {isMoviesTopRatedLoading ? (\n               <Loader />\n            ) : (\n               [\n                  moviesTopRated.length > 0 && (\n                     <SliderMovies\n                        listMovies={moviesTopRated}\n                        collection={collections[2]}\n                     />\n                  ),\n               ]\n            )}\n         </section>\n      </div>\n   );\n}\n\nexport default Movies;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useGlobalState } from \"../GlobalState\";\nimport { MoviesService } from \"../API/api\";\nimport ListMovies from \"../components/ListMovies\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport ButtonShowMore from \"../components/UI/Buttons/ButtonShowMore\";\n\nfunction CollectionsMovies() {\n   const listHeader = [\n      { name: \"Populars now\", collection: \"popular\" },\n      { name: \"Playing now in theatres\", collection: \"now_playing\" },\n      { name: \"Top Rated\", collection: \"top_rated\" },\n   ];\n   const [movies, setMovies] = useState([]);\n   const [currentPage, setCurrentPage] = useState(1);\n   const [totalPages, setTotalPages] = useState(0);\n   let params = useParams();\n   const currentHeader = listHeader.find(\n      (item) => item.collection === params.collection\n   );\n   const { language } = useGlobalState();\n\n   const [fetchListMovies, isMoviesLoading, moviesError] = useFetching(\n      async () => {\n         const response = await MoviesService.getCollectionMovies(\n            language,\n            params.collection,\n            currentPage\n         );\n         setMovies([...movies, ...response.results]);\n         setTotalPages(response.total_pages);\n      }\n   );\n\n   const showMore = () => {\n      if (currentPage < totalPages) {\n         setCurrentPage((prevState) => prevState + 1);\n      }\n   };\n\n   useEffect(() => {\n      fetchListMovies();\n   }, [currentPage]);\n\n   return (\n      <section>\n         <div className=\"container py-5\">\n            <h1 className=\"title mb-3\">{currentHeader.name}</h1>\n            {moviesError && <h2 className=\"h2\">{moviesError}</h2>}\n            {isMoviesLoading && <Loader />}\n            <ListMovies movies={movies} />\n            {currentPage !== totalPages && (\n               <ButtonShowMore\n                  onClick={showMore}\n                  currentPage={currentPage}\n                  totalPages={totalPages}\n                  type=\"button\"\n               >\n                  Show more\n               </ButtonShowMore>\n            )}\n         </div>\n      </section>\n   );\n}\n\nexport default CollectionsMovies;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { MoviesService } from \"../API/api\";\nimport ListMovies from \"../components/ListMovies\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport { useGlobalState } from \"../GlobalState\";\nimport { getGenre } from \"../utils/getGenre\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport ButtonShowMore from \"../components/UI/Buttons/ButtonShowMore\";\n\nfunction GenresMovies() {\n   const [movies, setMovies] = useState([]);\n   const [currentPage, setCurrentPage] = useState(1);\n   const [totalPages, setTotalPages] = useState(0);\n   let params = useParams();\n   const { language, listGenres } = useGlobalState();\n   const genre = getGenre(listGenres, params.name);\n\n   const [fetchListMovies, isMoviesLoading, moviesError] = useFetching(\n      async () => {\n         const response = await MoviesService.getListMoviesByGenre(\n            language,\n            genre.id,\n            currentPage\n         );\n         setMovies([...movies, ...response.results]);\n         setTotalPages(response.total_pages);\n      }\n   );\n\n   const showMore = () => {\n      if (currentPage < totalPages) {\n         setCurrentPage((prevState) => prevState + 1);\n      }\n   };\n\n   useEffect(() => {\n      fetchListMovies();\n   }, [currentPage]);\n\n   return (\n      <section>\n         <div className=\"container py-5\">\n            <h1 className=\"title mb-3\">{genre && genre.name}</h1>\n            {moviesError && <h2 className=\"h2\">{moviesError}</h2>}\n            {isMoviesLoading && <Loader />}\n            <ListMovies movies={movies} />\n            {currentPage !== totalPages && (\n               <ButtonShowMore\n                  onClick={showMore}\n                  currentPage={currentPage}\n                  totalPages={totalPages}\n                  type=\"button\"\n               >\n                  Show more\n               </ButtonShowMore>\n            )}\n         </div>\n      </section>\n   );\n}\n\nexport default GenresMovies;\n","export const getGenre = (array, name) => {\n   return array.find((i) => i.name.toLowerCase() === name.replace(/_/g, \" \"));\n};\n","export const getDate = (date) => {\n   const arrMonth = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n   ];\n   let day = date.slice(8, 9) === \"0\" ? date.slice(9) : date.slice(8);\n   const year = date.slice(0, 4);\n   const dataMounth = date.slice(5, 7);\n   let mounth = \"\";\n\n   if (dataMounth < 10) {\n      mounth = arrMonth[dataMounth.slice(1) - 1];\n   } else {\n      mounth = arrMonth[dataMounth - 1];\n   }\n\n   return `${day} ${mounth} ${year}`;\n};\n","import React from \"react\";\nimport { PlayBtn } from \"react-bootstrap-icons\";\n\nconst ButtonPlay = ({ children, ...props }) => {\n   return (\n      <button className=\"button-play\" {...props}>\n         <PlayBtn className=\"me-2\" />\n         {children}\n      </button>\n   );\n};\n\nexport default ButtonPlay;\n","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nfunction ModalTrailer(props) {\r\n   return (\r\n      <Modal\r\n         {...props}\r\n         show={props.showTrailer}\r\n         size=\"lg\"\r\n         className=\"modal-video-movie\"\r\n         aria-labelledby=\"contained-modal-title-vcenter\"\r\n         centered\r\n      >\r\n         <Modal.Header closeButton>Play Trailer</Modal.Header>\r\n         <Modal.Body>\r\n            <iframe\r\n               src={\r\n                  props.keyTrailer\r\n                     ? `https://www.youtube.com/embed/${props.keyTrailer}`\r\n                     : null\r\n               }\r\n               title=\"YouTube video player\"\r\n               frameBorder=\"0\"\r\n               allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n               allowFullScreen\r\n            ></iframe>\r\n         </Modal.Body>\r\n      </Modal>\r\n   );\r\n}\r\n\r\nexport default ModalTrailer;\r\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\n\nfunction ModalImage(props) {\n   const IMG_API = \"https://image.tmdb.org/t/p/original/\";\n\n   return (\n      <Modal\n         {...props}\n         show={props.showImage}\n         dialogClassName=\"modal-fullscreen\"\n         className=\"modal-image-movie\"\n      >\n         <Modal.Header closeButton></Modal.Header>\n         <Modal.Body>\n            <img src={props.filePath && IMG_API + props.filePath} alt=\"Foto\" />\n         </Modal.Body>\n      </Modal>\n   );\n}\n\nexport default ModalImage;\n","import React from \"react\";\n\nfunction CardCastAndCrew({ item }) {\n   const IMG_API = \"https://image.tmdb.org/t/p/w300\";\n\n   return (\n      <div className=\"tab-card-movie\">\n         <div className=\"tab-card-movie__img\">\n            <img\n               src={\n                  item.profile_path\n                     ? IMG_API + item.profile_path\n                     : \"../assets/img/avatar-default.jpg\"\n               }\n               alt={item?.name}\n               className=\"img-fluid\"\n            />\n         </div>\n         <div className=\"tab-card-movie__info\">\n            <div className=\"tab-card-movie__name\">{item?.name}</div>\n            <div className=\"tab-card-movie__text\">\n               {item.character ? item?.character : item?.job}\n            </div>\n         </div>\n      </div>\n   );\n}\n\nexport default CardCastAndCrew;\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react.js\";\r\nimport SwiperCore, {\r\n   Keyboard,\r\n   Scrollbar,\r\n   Navigation,\r\n   Pagination,\r\n} from \"swiper\";\r\nimport CardCastAndCrew from \"../../CardCastAndCrew\";\r\nSwiperCore.use([Keyboard, Scrollbar, Navigation, Pagination]);\r\n\r\nconst SliderCastAndCrew = ({ list }) => {\r\n   return (\r\n      <div className=\"swipper-container swiper-tab-card-movie\">\r\n         <Swiper\r\n            slidesPerView={2}\r\n            slidesPerGroup={1}\r\n            keyboard={{\r\n               enabled: true,\r\n            }}\r\n            scrollbar={true}\r\n            navigation={true}\r\n            breakpoints={{\r\n               991: {\r\n                  slidesPerView: 8,\r\n               },\r\n               768: {\r\n                  slidesPerView: 6,\r\n               },\r\n               565: {\r\n                  slidesPerView: 4,\r\n               },\r\n               480: {\r\n                  slidesPerView: 3,\r\n               },\r\n            }}\r\n         >\r\n            {list.map((item) => (\r\n               <SwiperSlide key={item.credit_id}>\r\n                  <CardCastAndCrew item={item} />\r\n               </SwiperSlide>\r\n            ))}\r\n         </Swiper>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SliderCastAndCrew;\r\n","import React from \"react\";\r\n\r\nfunction CardTrailer({ trailer, handleShow }) {\r\n   return (\r\n      <div className=\"tab-card-movie\">\r\n         <div className=\"tab-card-movie__trailer\">\r\n            <iframe\r\n               src={`https://www.youtube.com/embed/${trailer.key}`}\r\n               title=\"YouTube video player\"\r\n               frameBorder=\"0\"\r\n               allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n               allowFullScreen\r\n            ></iframe>\r\n            <button\r\n               className=\"tab-card-movie__btn-open-modal\"\r\n               onClick={() => handleShow(trailer.key)}\r\n            ></button>\r\n         </div>\r\n         <div className=\"tab-card-movie__info tab-card-movie__info_trailer\">\r\n            {trailer.name}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default CardTrailer;\r\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react.js\";\r\nimport SwiperCore, {\r\n   Keyboard,\r\n   Scrollbar,\r\n   Navigation,\r\n   Pagination,\r\n} from \"swiper\";\r\nimport CardTrailer from \"../../CardTrailer\";\r\nSwiperCore.use([Keyboard, Scrollbar, Navigation, Pagination]);\r\n\r\nconst SliderTrailer = ({ listTrailers, handleShow }) => {\r\n   return (\r\n      <div className=\"swipper-container swiper-tab-card-movie\">\r\n         <Swiper\r\n            slidesPerView={1}\r\n            slidesPerGroup={1}\r\n            keyboard={{\r\n               enabled: true,\r\n            }}\r\n            scrollbar={true}\r\n            navigation={true}\r\n            breakpoints={{\r\n               991: {\r\n                  slidesPerView: 4,\r\n               },\r\n               768: {\r\n                  slidesPerView: 3,\r\n               },\r\n               565: {\r\n                  slidesPerView: 2,\r\n               },\r\n            }}\r\n         >\r\n            {listTrailers.map((item) => (\r\n               <SwiperSlide key={item.id}>\r\n                  <CardTrailer trailer={item} handleShow={handleShow} />\r\n               </SwiperSlide>\r\n            ))}\r\n         </Swiper>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SliderTrailer;\r\n","import React from \"react\";\n\nfunction CardImage({ image, handleShowImage }) {\n   const IMG_API = \"https://image.tmdb.org/t/p/original/\";\n\n   return (\n      <div className=\"tab-card-movie\">\n         <div className=\"tab-card-movie__img\">\n            <img\n               src={image.file_path && IMG_API + image.file_path}\n               alt=\"\"\n               className=\"img-fluid\"\n            />\n            <button\n               className=\"tab-card-movie__btn-open-modal\"\n               onClick={() => handleShowImage(image.file_path)}\n            ></button>\n         </div>\n      </div>\n   );\n}\n\nexport default CardImage;\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react.js\";\r\nimport SwiperCore, {\r\n   Keyboard,\r\n   Scrollbar,\r\n   Navigation,\r\n   Pagination,\r\n} from \"swiper\";\r\nimport CardImage from \"../../CardImage\";\r\nSwiperCore.use([Keyboard, Scrollbar, Navigation, Pagination]);\r\n\r\nconst SliderImages = ({ list, handleShowImage }) => {\r\n   return (\r\n      <div className=\"swipper-container swiper-tab-card-movie\">\r\n         <Swiper\r\n            slidesPerView={1}\r\n            slidesPerGroup={1}\r\n            keyboard={{\r\n               enabled: true,\r\n            }}\r\n            scrollbar={true}\r\n            navigation={true}\r\n            breakpoints={{\r\n               991: {\r\n                  slidesPerView: 4,\r\n               },\r\n               768: {\r\n                  slidesPerView: 3,\r\n               },\r\n               565: {\r\n                  slidesPerView: 2,\r\n               },\r\n            }}\r\n         >\r\n            {list.map((item) => (\r\n               <SwiperSlide key={item.file_path}>\r\n                  <CardImage image={item} handleShowImage={handleShowImage} />\r\n               </SwiperSlide>\r\n            ))}\r\n         </Swiper>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SliderImages;\r\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react.js\";\r\nimport SwiperCore, {\r\n   Keyboard,\r\n   Scrollbar,\r\n   Navigation,\r\n   Pagination,\r\n} from \"swiper\";\r\nimport CardImage from \"../../CardImage\";\r\nSwiperCore.use([Keyboard, Scrollbar, Navigation, Pagination]);\r\n\r\nconst SliderPosters = ({ list, handleShowImage }) => {\r\n   return (\r\n      <div className=\"swipper-container swiper-tab-card-movie\">\r\n         <Swiper\r\n            slidesPerView={1.5}\r\n            slidesPerGroup={1}\r\n            keyboard={{\r\n               enabled: true,\r\n            }}\r\n            scrollbar={true}\r\n            navigation={true}\r\n            breakpoints={{\r\n               991: {\r\n                  slidesPerView: 8,\r\n               },\r\n               768: {\r\n                  slidesPerView: 6,\r\n               },\r\n               565: {\r\n                  slidesPerView: 4,\r\n               },\r\n               450: {\r\n                  slidesPerView: 3,\r\n               },\r\n            }}\r\n         >\r\n            {list.map((item) => (\r\n               <SwiperSlide key={item.file_path}>\r\n                  <CardImage image={item} handleShowImage={handleShowImage} />\r\n               </SwiperSlide>\r\n            ))}\r\n         </Swiper>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default SliderPosters;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MoviesService } from \"../API/api\";\r\nimport { useGlobalState } from \"../GlobalState\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\nimport Loader from \"./UI/Loader/Loader\";\r\nimport SliderMovies from \"./UI/Sliders/SliderMovies\";\r\n\r\nfunction RecommendedMovies({ id }) {\r\n   const { language } = useGlobalState();\r\n   const [listOfRecommendedMovies, setListOfRecommendedMovies] = useState([]);\r\n\r\n   const [\r\n      fetchListOfRecommendedMoviesById,\r\n      isListOfRecommendedMoviesByIdLoading,\r\n      listOfRecommendedMoviesByIdError,\r\n   ] = useFetching(async () => {\r\n      const response = await MoviesService.getListOfRecommendedMoviesById(\r\n         language,\r\n         id\r\n      );\r\n      setListOfRecommendedMovies(response.results);\r\n   });\r\n\r\n   useEffect(() => {\r\n      fetchListOfRecommendedMoviesById();\r\n   }, [id]);\r\n\r\n   return (\r\n      <section>\r\n         <h2 className=\"title\">Recommendations</h2>\r\n         {isListOfRecommendedMoviesByIdLoading && (\r\n            <h2 className=\"h2\">{listOfRecommendedMoviesByIdError}</h2>\r\n         )}\r\n         {isListOfRecommendedMoviesByIdLoading ? (\r\n            <Loader />\r\n         ) : (\r\n            [\r\n               listOfRecommendedMovies.length > 0 ? (\r\n                  <SliderMovies listMovies={listOfRecommendedMovies} />\r\n               ) : (\r\n                  <div>We don't have enough data to suggest any films.</div>\r\n               ),\r\n            ]\r\n         )}\r\n      </section>\r\n   );\r\n}\r\n\r\nexport default RecommendedMovies;\r\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Row, Col, Tabs, Tab } from \"react-bootstrap\";\nimport { MoviesService } from \"../API/api\";\nimport { getDate } from \"../utils/getDate\";\nimport { useGlobalState } from \"../GlobalState\";\nimport { StarFill, StopwatchFill } from \"react-bootstrap-icons\";\nimport AddRemoveFromWatchList from \"../components/AddRemoveFromWatchList\";\nimport AddRemoveFromWatched from \"../components/AddRemoveFromWatched\";\nimport ButtonPlay from \"../components/UI/Buttons/ButtonPlay\";\nimport ModalTrailer from \"../components/UI/Modals/ModalTrailer\";\nimport ModalImage from \"../components/UI/Modals/ModalImage\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport SliderCastAndCrew from \"../components/UI/Sliders/SliderCastAndCrew\";\nimport SliderTrailer from \"../components/UI/Sliders/SliderTrailer\";\nimport SliderImages from \"../components/UI/Sliders/SliderImages\";\nimport SliderPosters from \"../components/UI/Sliders/SliderPosters\";\nimport Loader from \"../components/UI/Loader/Loader\";\nimport RecommendedMovies from \"../components/RecommendedMovies\";\n\nfunction MovieDescriptionPage() {\n   const IMG_API = \"https://image.tmdb.org/t/p/w500\";\n   let params = useParams();\n   let router = useHistory();\n   const [movie, setMovie] = useState({});\n   const [listCast, setListCast] = useState([]);\n   const [listCrew, setListCrew] = useState([]);\n   const [listTrailers, setListVideo] = useState([]);\n   const [keyTrailer, setKeyTrailer] = useState(\"\");\n   const [listBackdrops, setListBackdrops] = useState([]);\n   const [listPosters, setListPosters] = useState([]);\n   const [filePath, setFilePath] = useState(\"\");\n   const [showTrailer, setShowTrailer] = useState(false);\n   const [showImage, setShowImage] = useState(false);\n   const { language } = useGlobalState();\n\n   function handleShow(key) {\n      setKeyTrailer(key);\n      setShowTrailer(true);\n   }\n\n   function handleShowImage(file) {\n      setFilePath(file);\n      setShowImage(true);\n   }\n\n   const [fetchMovieById, isMovieByIdLoading, movieByIdError] = useFetching(\n      async () => {\n         const response = await MoviesService.getMovieById(language, params.id);\n         setMovie(response);\n      }\n   );\n\n   async function fetchCastAndCrewMovie() {\n      const response = await MoviesService.getCastAndCrewMovieById(\n         language,\n         params.id\n      );\n      setListCast(response.cast);\n      setListCrew(response.crew);\n   }\n\n   async function fetchVideosMovie() {\n      const response = await MoviesService.getVideosMovieById(\n         language,\n         params.id\n      );\n      setListVideo(response.results);\n   }\n\n   async function fetchImagesMovie() {\n      const response = await MoviesService.getImagesMovieById(params.id);\n      setListBackdrops(response.backdrops);\n      setListPosters(response.posters);\n   }\n\n   useEffect(() => {\n      fetchMovieById();\n      fetchCastAndCrewMovie();\n      fetchVideosMovie();\n      fetchImagesMovie();\n   }, [params.id]);\n\n   return (\n      <div className=\"container py-5\">\n         {isMovieByIdLoading && <h2 className=\"h2\">{movieByIdError}</h2>}\n         {isMovieByIdLoading ? (\n            <Loader />\n         ) : (\n            [\n               movie && (\n                  <section className=\"mb-5\">\n                     <Row className=\"g-4\">\n                        <Col sm={4}>\n                           <div>\n                              <img\n                                 className=\"img-fluid\"\n                                 src={\n                                    movie.poster_path\n                                       ? IMG_API + movie.poster_path\n                                       : \"assets/img/camera.jpg\"\n                                 }\n                                 alt={movie.title}\n                              />\n                           </div>\n                        </Col>\n                        <Col sm={8}>\n                           <h1 className=\"h1 mb-2\">{movie?.title}</h1>\n                           <div className=\"movie__runtime mb-4\">\n                              <StopwatchFill />\n                              {movie?.runtime} min\n                           </div>\n                           <div className=\"rating mb-3\">\n                              <StarFill />\n                              <div>\n                                 <div className=\"rating__average\">\n                                    {movie?.vote_average}\n                                 </div>\n                                 <div className=\"rating__count\">\n                                    {movie.vote_count && [\n                                       movie?.vote_count.toString().length > 3\n                                          ? `${movie.vote_count\n                                               .toString()\n                                               .slice(0, -3)}K`\n                                          : movie.vote_count,\n                                    ]}\n                                 </div>\n                              </div>\n                           </div>\n                           <Row className=\"g-2 g-sm-4 mb-3\">\n                              <Col sm={3} className=\"movie__subtitle\">\n                                 {language === \"en-US\"\n                                    ? \"Original title\"\n                                    : \"Оригинальный заголовок\"}\n                              </Col>\n                              <Col sm={9} className=\"movie__info\">\n                                 {movie?.original_title}\n                              </Col>\n                           </Row>\n                           <Row className=\"g-2 g-sm-4 mb-3\">\n                              <Col sm={3} className=\"movie__subtitle\">\n                                 Tagline\n                              </Col>\n                              <Col sm={9} className=\"movie__info fst-italic\">\n                                 \"{movie.tagline ? movie.tagline : \"-\"}\"\n                              </Col>\n                           </Row>\n                           <Row className=\"g-2 g-sm-4 mb-3\">\n                              <Col sm={3} className=\"movie__subtitle\">\n                                 Country\n                              </Col>\n                              <Col sm={9} className=\"movie__info\">\n                                 {movie.production_countries &&\n                                    movie.production_countries\n                                       .map((item) => item.name)\n                                       .join(\", \")}\n                              </Col>\n                           </Row>\n                           <Row className=\"g-2 g-sm-4 mb-3\">\n                              <Col sm={3} className=\"movie__subtitle\">\n                                 Genre\n                              </Col>\n                              <Col sm={9} className=\"movie__info\">\n                                 {movie.genres &&\n                                    movie.genres.map((item, i, arr) => (\n                                       <span\n                                          key={item.name}\n                                          className=\"link-small\"\n                                          onClick={() =>\n                                             router.push(\n                                                `/movies/${item.name\n                                                   .toLowerCase()\n                                                   .replace(/\\s/g, \"_\")}`\n                                             )\n                                          }\n                                       >\n                                          {item.name}\n                                          {i !== arr.length - 1 ? \", \" : \"\"}\n                                       </span>\n                                    ))}\n                              </Col>\n                           </Row>\n                           <Row className=\"g-2 g-sm-4 mb-3\">\n                              <Col sm={3} className=\"movie__subtitle\">\n                                 Release date\n                              </Col>\n                              <Col sm={9} className=\"movie__info\">\n                                 {movie.release_date\n                                    ? getDate(movie.release_date)\n                                    : \"-\"}\n                              </Col>\n                           </Row>\n                           <Row className=\"g-2 g-sm-4 mb-3\">\n                              <Col sm={3} className=\"movie__subtitle\">\n                                 Budget\n                              </Col>\n                              <Col sm={9} className=\"movie__info\">\n                                 {movie.budget\n                                    ? `$ ${movie.budget\n                                         .toString()\n                                         .replace(\n                                            /(\\d)(?=(\\d{3})+(\\D|$))/g,\n                                            \"$1 \"\n                                         )}`\n                                    : \"-\"}\n                              </Col>\n                           </Row>\n                           <div className=\"mb-3\">\n                              <div className=\"movie__subtitle mb-2\">\n                                 Description:\n                              </div>\n                              <div className=\"movie__description\">\n                                 {movie?.overview}\n                              </div>\n                           </div>\n                           {listTrailers.length > 0 && (\n                              <div className=\"mb-3\">\n                                 <ButtonPlay\n                                    variant=\"primary\"\n                                    onClick={() =>\n                                       handleShow(listTrailers[0].key)\n                                    }\n                                 >\n                                    Watch The Trailer\n                                 </ButtonPlay>\n                              </div>\n                           )}\n                           <div className=\"movie-menu\">\n                              <AddRemoveFromWatchList\n                                 isCard={false}\n                                 id={movie.id}\n                                 movie={movie}\n                              />\n                              <AddRemoveFromWatched\n                                 isCard={false}\n                                 id={movie.id}\n                                 movie={movie}\n                              />\n                           </div>\n                        </Col>\n                     </Row>\n                  </section>\n               ),\n            ]\n         )}\n         <section className=\"mb-5\">\n            <Tabs\n               defaultActiveKey=\"1\"\n               id=\"tab-movie\"\n               className=\"nav-tab-movie mb-4\"\n            >\n               {listCast.length > 0 && (\n                  <Tab eventKey=\"1\" title=\"Cast\">\n                     <SliderCastAndCrew list={listCast} />\n                  </Tab>\n               )}\n               {listCrew.length > 0 && (\n                  <Tab eventKey=\"2\" title=\"Crew\">\n                     <SliderCastAndCrew list={listCrew} />\n                  </Tab>\n               )}\n               {listTrailers.length > 0 && (\n                  <Tab eventKey=\"3\" title=\"Video\">\n                     <SliderTrailer\n                        listTrailers={listTrailers}\n                        handleShow={handleShow}\n                     />\n                  </Tab>\n               )}\n               {listBackdrops.length > 0 && (\n                  <Tab eventKey=\"4\" title=\"Backdrops\">\n                     <SliderImages\n                        list={listBackdrops}\n                        handleShowImage={handleShowImage}\n                     />\n                  </Tab>\n               )}\n               {listPosters.length > 0 && (\n                  <Tab eventKey=\"5\" title=\"Posters\">\n                     <SliderPosters\n                        list={listPosters}\n                        handleShowImage={handleShowImage}\n                     />\n                  </Tab>\n               )}\n            </Tabs>\n         </section>\n         <RecommendedMovies id={params.id} />\n         {listTrailers && (\n            <ModalTrailer\n               keyTrailer={keyTrailer}\n               showTrailer={showTrailer}\n               onHide={() => setShowTrailer(false)}\n            />\n         )}\n         {listBackdrops && listPosters && (\n            <ModalImage\n               filePath={filePath}\n               showImage={showImage}\n               onHide={() => setShowImage(false)}\n            />\n         )}\n      </div>\n   );\n}\n\nexport default MovieDescriptionPage;\n","import React from \"react\";\nimport { useGlobalState } from \"../GlobalState\";\nimport ListMovies from \"../components/ListMovies\";\n\nfunction Watched() {\n   const { watched } = useGlobalState();\n\n   return (\n      <section className=\"page-list py-5\">\n         <div className=\"page-list__body container\">\n            <h1 className=\"title\">Watched</h1>\n            {watched.length > 0 ? (\n               <ListMovies movies={watched} />\n            ) : (\n               <div className=\"no-movies\">\n                  <h2 className=\"no-movies__title\">No movies</h2>\n               </div>\n            )}\n         </div>\n      </section>\n   );\n}\n\nexport default Watched;\n","import Main from \"../pages/Main\";\nimport SearchPage from \"../pages/SearchPage\";\nimport Movies from \"../pages/Movies\";\nimport CollectionsMovies from \"../pages/CollectionsMovies\";\nimport GenresMovies from \"../pages/GenresMovies\";\nimport MovieDescriptionPage from \"../pages/MovieDescriptionPage\";\nimport WatchList from \"../pages/WatchList\";\nimport Watched from \"../pages/Watched\";\n// import Error from '../pages/Error';\n\nexport const routes = [\n   { component: Main, path: \"/\", exact: true },\n   { component: SearchPage, path: \"/search\", exact: true },\n   { component: Movies, path: \"/movies\", exact: true },\n   {\n      component: CollectionsMovies,\n      path: \"/collections/:collection\",\n      exact: true,\n   },\n   { component: GenresMovies, path: \"/movies/:name\", exact: true },\n   { component: MovieDescriptionPage, path: \"/watch/:id\", exact: true },\n   { component: WatchList, path: \"/watchlist\", exact: true },\n   { component: Watched, path: \"/watched\", exact: true },\n];\n","import React from \"react\";\nimport { useGlobalState } from \"../GlobalState\";\nimport ListMovies from \"../components/ListMovies\";\n\nfunction WatchList() {\n   const { watchList } = useGlobalState();\n\n   return (\n      <section className=\"page-list py-5\">\n         <div className=\"page-list__body container\">\n            <h1 className=\"title\">My Watch List</h1>\n            {watchList.length > 0 ? (\n               <ListMovies movies={watchList} />\n            ) : (\n               <div className=\"no-movies\">\n                  <h2 className=\"no-movies__title\">\n                     No movies in your list, add some!\n                  </h2>\n               </div>\n            )}\n         </div>\n      </section>\n   );\n}\n\nexport default WatchList;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { routes } from \"../router/router\";\n\nfunction AppRouter() {\n   return (\n      <>\n         <Switch>\n            {routes.map((route) => (\n               <Route\n                  key={route.path}\n                  component={route.component}\n                  path={route.path}\n                  exact={route.exact}\n               />\n            ))}\n         </Switch>\n      </>\n   );\n}\n\nexport default AppRouter;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Footer = () => {\n   return (\n      <footer className=\"footer\">\n         <div className=\"container\">\n            <div className=\"footer__body\">\n               <div className=\"d-flex flex-sm-row flex-column align-items-center justify-content-center justify-content-sm-between mb-3\">\n                  <Link to=\"/\" className=\"footer__logo\">\n                     <img src=\"assets/img/logo-02.svg\" alt=\"Logo\" />\n                  </Link>\n                  <div className=\"footer__author mt-3 mt-sm-0\">\n                     Created by{\" \"}\n                     <a href=\"https://github.com/andrew-soldat\" target=\"blank\">\n                        ANDREW BLISHCH\n                     </a>\n                  </div>\n               </div>\n               <div className=\"text-center\">Copyright © 2022</div>\n            </div>\n         </div>\n      </footer>\n   );\n};\nexport default Footer;\n","import Header from \"./components/Header\";\nimport { HashRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport { GlobalProvider } from \"./GlobalState\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n   return (\n      <GlobalProvider>\n         <HashRouter>\n            <div className=\"wrapper\">\n               <Header />\n               <div className=\"page\">\n                  <AppRouter />\n               </div>\n               <Footer />\n            </div>\n         </HashRouter>\n      </GlobalProvider>\n   );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"swiper/swiper.scss\";\nimport \"swiper/modules/navigation/navigation.scss\";\nimport \"swiper/modules/pagination/pagination.scss\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById(\"root\")\n);\n"],"sourceRoot":""}